{"ast":null,"code":"import _defineProperty from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import ReactDOM from\"react-dom\";import{withGoogleMap,GoogleMap,withScriptjs,InfoWindow,Marker}from\"react-google-maps\";import Autocomplete from'react-google-autocomplete';import Geocode from\"react-geocode\";// import SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nGeocode.setApiKey(\"AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I\");Geocode.enableDebug();var Map=/*#__PURE__*/function(_React$Component){_inherits(Map,_React$Component);function Map(props){var _this;_classCallCheck(this,Map);_this=_possibleConstructorReturn(this,_getPrototypeOf(Map).call(this,props));_this.getCity=function(addressArray){console.warn(\"getCity: addressArray\",addressArray);var city='';for(var i=0;i<addressArray.length;i++){if(addressArray[i].types[0]&&'administrative_area_level_2'===addressArray[i].types[0]){city=addressArray[i].long_name;return city;}}};_this.getArea=function(addressArray){var area='';for(var i=0;i<addressArray.length;i++){if(addressArray[i].types[0]){for(var j=0;j<addressArray[i].types.length;j++){if('sublocality_level_1'===addressArray[i].types[j]||'locality'===addressArray[i].types[j]){area=addressArray[i].long_name;return area;}}}}};_this.getState=function(addressArray){var state='';for(var i=0;i<addressArray.length;i++){for(var _i=0;_i<addressArray.length;_i++){if(addressArray[_i].types[0]&&'administrative_area_level_1'===addressArray[_i].types[0]){state=addressArray[_i].long_name;return state;}}}};_this.onChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.onInfoWindowClose=function(event){console.warn(\"Infow window has been closed!!!\",event);};_this.onPlaceSelected=function(place){console.warn(\"place =\",place);var address=place.formatted_address,addressArray=place.address_components,city=_this.getCity(addressArray),area=_this.getArea(addressArray),state=_this.getState(addressArray),latValue=place.geometry.location.lat(),lngValue=place.geometry.location.lng();// Set these values in the state.\n_this.setState({address:address?address:'',area:area?area:'',city:city?city:'',state:state?state:'',markerPosition:{lat:latValue,lng:lngValue},mapPosition:{lat:latValue,lng:lngValue}});};_this.onMarkerDragEnd=function(event){console.log('event',event);var newLat=event.latLng.lat(),newLng=event.latLng.lng(),addressArray=[];Geocode.fromLatLng(newLat,newLng).then(function(response){var address=response.results[0].formatted_address,addressArray=response.results[0].address_components,city=_this.getCity(addressArray),area=_this.getArea(addressArray),state=_this.getState(addressArray);_this.setState({address:address?address:'',area:area?area:'',city:city?city:'',state:state?state:''});},function(error){console.error(error);});};_this.state={address:'',city:'',area:'',state:'',mapPosition:{lat:_this.props.center.lat,lng:_this.props.center.lng},markerPosition:{lat:_this.props.center.lat,lng:_this.props.center.lng}};return _this;}/**\n    * Get the current address from the default map position and set those values in the state\n    */_createClass(Map,[{key:\"componentDidMount\",value:function componentDidMount(){// Try HTML5 geolocation.\nif(navigator.geolocation){var that=this;navigator.geolocation.getCurrentPosition(function(position){that.state.mapPosition.lat=position.coords.latitude;that.state.mapPosition.lng=position.coords.longitude;that.next();},function(){console.warn(\"getCurrentPosition: Error!\");});}else{// Browser doesn't support Geolocation\nconsole.warn(\"Browser doesn't support Geolocation\");}}},{key:\"next\",value:function next(){var _this2=this;Geocode.fromLatLng(this.state.mapPosition.lat,this.state.mapPosition.lng).then(function(response){var address=response.results[0].formatted_address,addressArray=response.results[0].address_components,city=_this2.getCity(addressArray),area=_this2.getArea(addressArray),state=_this2.getState(addressArray);console.log('city',city,area,state);_this2.setState({address:address?address:'',area:area?area:'',city:city?city:'',state:state?state:''});},function(error){console.error(error);});}/**\n    * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n    *\n    * @param nextProps\n    * @param nextState\n    * @return {boolean}\n    */},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.state.markerPosition.lat!==this.props.center.lat||this.state.address!==nextState.address||this.state.city!==nextState.city||this.state.area!==nextState.area||this.state.state!==nextState.state){return true;}else if(this.props.center.lat===nextProps.center.lat){return false;}}/**\n    * Get the city and set the city input value to the one selected\n    *\n    * @param addressArray\n    * @return {string}\n    */},{key:\"render\",value:function render(){var _this3=this;var AsyncMap=withScriptjs(withGoogleMap(function(props){return React.createElement(GoogleMap,{google:_this3.props.google,defaultZoom:_this3.props.zoom,defaultCenter:{lat:_this3.state.mapPosition.lat,lng:_this3.state.mapPosition.lng}},React.createElement(Marker,{google:_this3.props.google,name:'Dolores park',draggable:true,onDragEnd:_this3.onMarkerDragEnd,position:{lat:_this3.state.markerPosition.lat,lng:_this3.state.markerPosition.lng}}),React.createElement(Marker,null),React.createElement(InfoWindow,{onClose:_this3.onInfoWindowClose,position:{lat:_this3.state.markerPosition.lat+0.0018,lng:_this3.state.markerPosition.lng}},React.createElement(\"div\",null,React.createElement(\"span\",{style:{padding:0,margin:0,color:'black'}},_this3.state.address))));}));var map;if(this.props.center.lat!==undefined){map=React.createElement(\"div\",{className:\"col\"},React.createElement(AsyncMap,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\",loadingElement:React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:React.createElement(\"div\",{style:{height:this.props.height,width:\"100%\"}}),mapElement:React.createElement(\"div\",{style:{height:\"100%\"}})}),React.createElement(\"div\",{style:{'marginTop':\"50px\",'marginBottom':\"50px\"}},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"\"},\"City\"),React.createElement(\"input\",{type:\"text\",name:\"city\",className:\"form-control\",onChange:this.onChange,readOnly:\"readOnly\",value:this.state.city})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"\"},\"Area\"),React.createElement(\"input\",{type:\"text\",name:\"area\",className:\"form-control\",onChange:this.onChange,readOnly:\"readOnly\",value:this.state.area})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"\"},\"State\"),React.createElement(\"input\",{type:\"text\",name:\"state\",className:\"form-control\",onChange:this.onChange,readOnly:\"readOnly\",value:this.state.state})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"\"},\"Address\"),React.createElement(\"input\",{type:\"text\",name:\"address\",className:\"form-control\",onChange:this.onChange,readOnly:\"readOnly\",value:this.state.address}))));}else{map=React.createElement(\"div\",{style:{height:this.props.height}});}return map;}}]);return Map;}(React.Component);export default Map;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Map.js"],"names":["React","Component","ReactDOM","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Autocomplete","Geocode","setApiKey","enableDebug","Map","props","getCity","addressArray","console","warn","city","i","length","types","long_name","getArea","area","j","getState","state","onChange","event","setState","target","name","value","onInfoWindowClose","onPlaceSelected","place","address","formatted_address","address_components","latValue","geometry","location","lat","lngValue","lng","markerPosition","mapPosition","onMarkerDragEnd","log","newLat","latLng","newLng","fromLatLng","then","response","results","error","center","navigator","geolocation","that","getCurrentPosition","position","coords","latitude","longitude","next","nextProps","nextState","AsyncMap","google","zoom","padding","margin","color","map","undefined","height","width"],"mappings":"0qBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,aAAT,CAAwBC,SAAxB,CAAmCC,YAAnC,CAAiDC,UAAjD,CAA6DC,MAA7D,KAA2E,mBAA3E,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA;AACAA,OAAO,CAACC,SAAR,CAAkB,yCAAlB,EACAD,OAAO,CAACE,WAAR,G,GAYMC,CAAAA,G,yEACJ,aAAYC,KAAZ,CAAkB,qCAChB,qEAAOA,KAAP,GADgB,MAuFlBC,OAvFkB,CAuFR,SAAEC,YAAF,CAAoB,CAC5BC,OAAO,CAACC,IAAR,CAAa,uBAAb,CAAsCF,YAAtC,EACA,GAAIG,CAAAA,IAAI,CAAG,EAAX,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,YAAY,CAACK,MAAjC,CAAyCD,CAAC,EAA1C,CAA+C,CAC7C,GAAKJ,YAAY,CAAEI,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,GAA8B,gCAAkCN,YAAY,CAAEI,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,CAArE,CAAkG,CAChGH,IAAI,CAAGH,YAAY,CAAEI,CAAF,CAAZ,CAAkBG,SAAzB,CACA,MAAOJ,CAAAA,IAAP,CACD,CACF,CACF,CAhGiB,OAuGlBK,OAvGkB,CAuGR,SAAER,YAAF,CAAoB,CAC5B,GAAIS,CAAAA,IAAI,CAAG,EAAX,CACA,IAAK,GAAIL,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,YAAY,CAACK,MAAjC,CAAyCD,CAAC,EAA1C,CAA+C,CAC7C,GAAKJ,YAAY,CAAEI,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,CAAL,CAAmC,CACjC,IAAM,GAAII,CAAAA,CAAC,CAAG,CAAd,CAAiBA,CAAC,CAAGV,YAAY,CAAEI,CAAF,CAAZ,CAAkBE,KAAlB,CAAwBD,MAA7C,CAAqDK,CAAC,EAAtD,CAA2D,CACzD,GAAK,wBAA0BV,YAAY,CAAEI,CAAF,CAAZ,CAAkBE,KAAlB,CAAwBI,CAAxB,CAA1B,EAAwD,aAAeV,YAAY,CAAEI,CAAF,CAAZ,CAAkBE,KAAlB,CAAwBI,CAAxB,CAA5E,CAAyG,CACvGD,IAAI,CAAGT,YAAY,CAAEI,CAAF,CAAZ,CAAkBG,SAAzB,CACA,MAAOE,CAAAA,IAAP,CACD,CACF,CACF,CACF,CACF,CAnHiB,OA0HlBE,QA1HkB,CA0HP,SAAEX,YAAF,CAAoB,CAC7B,GAAIY,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIR,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,YAAY,CAACK,MAAjC,CAAyCD,CAAC,EAA1C,CAA+C,CAC7C,IAAK,GAAIA,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGJ,YAAY,CAACK,MAAjC,CAAyCD,EAAC,EAA1C,CAA+C,CAC7C,GAAKJ,YAAY,CAAEI,EAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,GAA8B,gCAAkCN,YAAY,CAAEI,EAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,CAArE,CAAkG,CAChGM,KAAK,CAAGZ,YAAY,CAAEI,EAAF,CAAZ,CAAkBG,SAA1B,CACA,MAAOK,CAAAA,KAAP,CACD,CACF,CACF,CACF,CApIiB,OAyIlBC,QAzIkB,CAyIP,SAAEC,KAAF,CAAa,CACtB,MAAKC,QAAL,oBAAiBD,KAAK,CAACE,MAAN,CAAaC,IAA9B,CAAqCH,KAAK,CAACE,MAAN,CAAaE,KAAlD,GACD,CA3IiB,OAiJlBC,iBAjJkB,CAiJE,SAAEL,KAAF,CAAa,CAC/Bb,OAAO,CAACC,IAAR,CAAa,iCAAb,CAAgDY,KAAhD,EACD,CAnJiB,OAwJlBM,eAxJkB,CAwJA,SAAEC,KAAF,CAAa,CAC7BpB,OAAO,CAACC,IAAR,CAAa,SAAb,CAAwBmB,KAAxB,EACA,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,iBAAtB,CACAvB,YAAY,CAAIqB,KAAK,CAACG,kBADtB,CAEArB,IAAI,CAAG,MAAKJ,OAAL,CAAcC,YAAd,CAFP,CAGAS,IAAI,CAAG,MAAKD,OAAL,CAAcR,YAAd,CAHP,CAIAY,KAAK,CAAG,MAAKD,QAAL,CAAeX,YAAf,CAJR,CAKAyB,QAAQ,CAAGJ,KAAK,CAACK,QAAN,CAAeC,QAAf,CAAwBC,GAAxB,EALX,CAMAC,QAAQ,CAAGR,KAAK,CAACK,QAAN,CAAeC,QAAf,CAAwBG,GAAxB,EANX,CAOA;AACA,MAAKf,QAAL,CAAc,CACZO,OAAO,CAAIA,OAAF,CAAcA,OAAd,CAAwB,EADrB,CAEZb,IAAI,CAAIA,IAAF,CAAWA,IAAX,CAAkB,EAFZ,CAGZN,IAAI,CAAIA,IAAF,CAAWA,IAAX,CAAkB,EAHZ,CAIZS,KAAK,CAAIA,KAAF,CAAYA,KAAZ,CAAoB,EAJf,CAKZmB,cAAc,CAAE,CAChBH,GAAG,CAAEH,QADW,CAEhBK,GAAG,CAAED,QAFW,CALJ,CASZG,WAAW,CAAE,CACXJ,GAAG,CAAEH,QADM,CAEXK,GAAG,CAAED,QAFM,CATD,CAAd,EAcD,CAhLiB,OAwLlBI,eAxLkB,CAwLA,SAAEnB,KAAF,CAAa,CAC7Bb,OAAO,CAACiC,GAAR,CAAa,OAAb,CAAsBpB,KAAtB,EACA,GAAIqB,CAAAA,MAAM,CAAGrB,KAAK,CAACsB,MAAN,CAAaR,GAAb,EAAb,CACAS,MAAM,CAAGvB,KAAK,CAACsB,MAAN,CAAaN,GAAb,EADT,CAEA9B,YAAY,CAAG,EAFf,CAGAN,OAAO,CAAC4C,UAAR,CAAoBH,MAApB,CAA6BE,MAA7B,EAAsCE,IAAtC,CACE,SAAAC,QAAQ,CAAI,CACV,GAAMlB,CAAAA,OAAO,CAAGkB,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBlB,iBAApC,CACAvB,YAAY,CAAIwC,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBjB,kBADpC,CAEArB,IAAI,CAAG,MAAKJ,OAAL,CAAcC,YAAd,CAFP,CAGAS,IAAI,CAAG,MAAKD,OAAL,CAAcR,YAAd,CAHP,CAIAY,KAAK,CAAG,MAAKD,QAAL,CAAeX,YAAf,CAJR,CAKA,MAAKe,QAAL,CAAe,CACbO,OAAO,CAAIA,OAAF,CAAcA,OAAd,CAAwB,EADpB,CAEbb,IAAI,CAAIA,IAAF,CAAWA,IAAX,CAAkB,EAFX,CAGbN,IAAI,CAAIA,IAAF,CAAWA,IAAX,CAAkB,EAHX,CAIbS,KAAK,CAAIA,KAAF,CAAYA,KAAZ,CAAoB,EAJd,CAAf,EAMD,CAbH,CAcC,SAAA8B,KAAK,CAAI,CACRzC,OAAO,CAACyC,KAAR,CAAcA,KAAd,EACA,CAhBF,EAkBD,CA/MiB,CAEhB,MAAK9B,KAAL,CAAa,CACXU,OAAO,CAAE,EADE,CAEXnB,IAAI,CAAE,EAFK,CAGXM,IAAI,CAAE,EAHK,CAIXG,KAAK,CAAE,EAJI,CAKXoB,WAAW,CAAE,CACXJ,GAAG,CAAE,MAAK9B,KAAL,CAAW6C,MAAX,CAAkBf,GADZ,CAEXE,GAAG,CAAE,MAAKhC,KAAL,CAAW6C,MAAX,CAAkBb,GAFZ,CALF,CASXC,cAAc,CAAE,CACdH,GAAG,CAAE,MAAK9B,KAAL,CAAW6C,MAAX,CAAkBf,GADT,CAEdE,GAAG,CAAE,MAAKhC,KAAL,CAAW6C,MAAX,CAAkBb,GAFT,CATL,CAAb,CAFgB,aAgBjB,CACD;;mFAGoB,CAClB;AACA,GAAIc,SAAS,CAACC,WAAd,CAA2B,CACzB,GAAIC,CAAAA,IAAI,CAAG,IAAX,CACAF,SAAS,CAACC,WAAV,CAAsBE,kBAAtB,CAAyC,SAASC,QAAT,CAAmB,CAC1DF,IAAI,CAAClC,KAAL,CAAWoB,WAAX,CAAuBJ,GAAvB,CAA6BoB,QAAQ,CAACC,MAAT,CAAgBC,QAA7C,CACAJ,IAAI,CAAClC,KAAL,CAAWoB,WAAX,CAAuBF,GAAvB,CAA6BkB,QAAQ,CAACC,MAAT,CAAgBE,SAA7C,CACAL,IAAI,CAACM,IAAL,GACD,CAJD,CAIG,UAAW,CACZnD,OAAO,CAACC,IAAR,CAAa,4BAAb,EACD,CAND,EAOD,CATD,IASO,CACL;AACAD,OAAO,CAACC,IAAR,CAAa,qCAAb,EACD,CAGF,C,mCAEM,iBACLR,OAAO,CAAC4C,UAAR,CAAoB,KAAK1B,KAAL,CAAWoB,WAAX,CAAuBJ,GAA3C,CAAiD,KAAKhB,KAAL,CAAWoB,WAAX,CAAuBF,GAAxE,EAA8ES,IAA9E,CACE,SAAAC,QAAQ,CAAI,CACV,GAAMlB,CAAAA,OAAO,CAAGkB,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBlB,iBAApC,CACAvB,YAAY,CAAIwC,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBjB,kBADpC,CAEArB,IAAI,CAAG,MAAI,CAACJ,OAAL,CAAcC,YAAd,CAFP,CAGAS,IAAI,CAAG,MAAI,CAACD,OAAL,CAAcR,YAAd,CAHP,CAIAY,KAAK,CAAG,MAAI,CAACD,QAAL,CAAeX,YAAf,CAJR,CAKAC,OAAO,CAACiC,GAAR,CAAa,MAAb,CAAqB/B,IAArB,CAA2BM,IAA3B,CAAiCG,KAAjC,EAEA,MAAI,CAACG,QAAL,CAAe,CACbO,OAAO,CAAIA,OAAF,CAAcA,OAAd,CAAwB,EADpB,CAEbb,IAAI,CAAIA,IAAF,CAAWA,IAAX,CAAkB,EAFX,CAGbN,IAAI,CAAIA,IAAF,CAAWA,IAAX,CAAkB,EAHX,CAIbS,KAAK,CAAIA,KAAF,CAAYA,KAAZ,CAAoB,EAJd,CAAf,EAMD,CAfH,CAgBE,SAAA8B,KAAK,CAAI,CACPzC,OAAO,CAACyC,KAAR,CAAcA,KAAd,EACD,CAlBH,EAoBD,CACD;;;;;;0EAOuBW,S,CAAWC,S,CAAW,CAC3C,GACE,KAAK1C,KAAL,CAAWmB,cAAX,CAA0BH,GAA1B,GAAkC,KAAK9B,KAAL,CAAW6C,MAAX,CAAkBf,GAApD,EACA,KAAKhB,KAAL,CAAWU,OAAX,GAAuBgC,SAAS,CAAChC,OADjC,EAEA,KAAKV,KAAL,CAAWT,IAAX,GAAoBmD,SAAS,CAACnD,IAF9B,EAGA,KAAKS,KAAL,CAAWH,IAAX,GAAoB6C,SAAS,CAAC7C,IAH9B,EAIA,KAAKG,KAAL,CAAWA,KAAX,GAAqB0C,SAAS,CAAC1C,KALjC,CAME,CACA,MAAO,KAAP,CACD,CARD,IAQO,IAAK,KAAKd,KAAL,CAAW6C,MAAX,CAAkBf,GAAlB,GAA0ByB,SAAS,CAACV,MAAV,CAAiBf,GAAhD,CAAqD,CAC1D,MAAO,MAAP,CACD,CACF,CACD;;;;;6CA+HQ,iBACN,GAAM2B,CAAAA,QAAQ,CAAGjE,YAAY,CAC3BF,aAAa,CACX,SAAAU,KAAK,QACH,qBAAC,SAAD,EAAW,MAAM,CAAG,MAAI,CAACA,KAAL,CAAW0D,MAA/B,CACE,WAAW,CAAG,MAAI,CAAC1D,KAAL,CAAW2D,IAD3B,CAEE,aAAa,CAAE,CAAE7B,GAAG,CAAE,MAAI,CAAChB,KAAL,CAAWoB,WAAX,CAAuBJ,GAA9B,CAAmCE,GAAG,CAAE,MAAI,CAAClB,KAAL,CAAWoB,WAAX,CAAuBF,GAA/D,CAFjB,EAOE,oBAAC,MAAD,EACE,MAAM,CAAG,MAAI,CAAChC,KAAL,CAAW0D,MADtB,CAEE,IAAI,CAAE,cAFR,CAGE,SAAS,CAAE,IAHb,CAIE,SAAS,CAAG,MAAI,CAACvB,eAJnB,CAKE,QAAQ,CAAE,CAAEL,GAAG,CAAE,MAAI,CAAChB,KAAL,CAAWmB,cAAX,CAA0BH,GAAjC,CAAsCE,GAAG,CAAE,MAAI,CAAClB,KAAL,CAAWmB,cAAX,CAA0BD,GAArE,CALZ,EAPF,CAcE,oBAAC,MAAD,MAdF,CAeE,oBAAC,UAAD,EACE,OAAO,CAAG,MAAI,CAACX,iBADjB,CAEE,QAAQ,CAAE,CAAES,GAAG,CAAI,MAAI,CAAChB,KAAL,CAAWmB,cAAX,CAA0BH,GAA1B,CAAgC,MAAzC,CAAmDE,GAAG,CAAE,MAAI,CAAClB,KAAL,CAAWmB,cAAX,CAA0BD,GAAlF,CAFZ,EAIE,+BACE,4BAAM,KAAK,CAAE,CAAE4B,OAAO,CAAE,CAAX,CAAcC,MAAM,CAAE,CAAtB,CAAyBC,KAAK,CAAE,OAAhC,CAAb,EAAyD,MAAI,CAAChD,KAAL,CAAWU,OAApE,CADF,CAJF,CAfF,CADG,EADM,CADc,CAA7B,CA8BA,GAAIuC,CAAAA,GAAJ,CACA,GAAI,KAAK/D,KAAL,CAAW6C,MAAX,CAAkBf,GAAlB,GAA0BkC,SAA9B,CAA0C,CACxCD,GAAG,CAAG,2BAAK,SAAS,CAAC,KAAf,EACJ,oBAAC,QAAD,EACE,YAAY,CAAC,sGADf,CAEE,cAAc,CACZ,2BAAK,KAAK,CAAE,CAAEE,MAAM,OAAR,CAAZ,EAHJ,CAKE,gBAAgB,CACd,2BAAK,KAAK,CAAE,CAAEA,MAAM,CAAE,KAAKjE,KAAL,CAAWiE,MAArB,CAA6BC,KAAK,OAAlC,CAAZ,EANJ,CAQE,UAAU,CACR,2BAAK,KAAK,CAAE,CAAED,MAAM,OAAR,CAAZ,EATJ,EADI,CAaJ,2BAAK,KAAK,CAAE,CAAE,kBAAF,CAAuB,qBAAvB,CAAZ,EACE,2BAAK,SAAS,CAAC,YAAf,EACE,6BAAO,OAAO,CAAC,EAAf,SADF,CAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,MAAxB,CAA+B,SAAS,CAAC,cAAzC,CAAwD,QAAQ,CAAG,KAAKlD,QAAxE,CAAmF,QAAQ,CAAC,UAA5F,CAAuG,KAAK,CAAG,KAAKD,KAAL,CAAWT,IAA1H,EAFF,CADF,CAKE,2BAAK,SAAS,CAAC,YAAf,EACE,6BAAO,OAAO,CAAC,EAAf,SADF,CAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,MAAxB,CAA+B,SAAS,CAAC,cAAzC,CAAwD,QAAQ,CAAG,KAAKU,QAAxE,CAAmF,QAAQ,CAAC,UAA5F,CAAuG,KAAK,CAAG,KAAKD,KAAL,CAAWH,IAA1H,EAFF,CALF,CASE,2BAAK,SAAS,CAAC,YAAf,EACE,6BAAO,OAAO,CAAC,EAAf,UADF,CAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,OAAxB,CAAgC,SAAS,CAAC,cAA1C,CAAyD,QAAQ,CAAG,KAAKI,QAAzE,CAAoF,QAAQ,CAAC,UAA7F,CAAwG,KAAK,CAAG,KAAKD,KAAL,CAAWA,KAA3H,EAFF,CATF,CAaE,2BAAK,SAAS,CAAC,YAAf,EACE,6BAAO,OAAO,CAAC,EAAf,YADF,CAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,SAAxB,CAAkC,SAAS,CAAC,cAA5C,CAA2D,QAAQ,CAAG,KAAKC,QAA3E,CAAsF,QAAQ,CAAC,UAA/F,CAA0G,KAAK,CAAG,KAAKD,KAAL,CAAWU,OAA7H,EAFF,CAbF,CAbI,CAAN,CAgCD,CAjCD,IAiCO,CACLuC,GAAG,CAAG,2BAAK,KAAK,CAAE,CAAEE,MAAM,CAAE,KAAKjE,KAAL,CAAWiE,MAArB,CAAZ,EAAN,CACD,CACD,MAAQF,CAAAA,GAAR,CACD,C,iBAtRe5E,KAAK,CAACC,S,EAwRxB,cAAeW,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\n// import SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nGeocode.setApiKey(\"AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I\");\nGeocode.enableDebug();\n\n\n\n\n\n\n\n\n\n\n\nclass Map extends React.Component{\n  constructor(props){\n    super( props );\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      }\n    }\n  }\n  /**\n    * Get the current address from the default map position and set those values in the state\n    */\n  componentDidMount() {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      let that = this;\n      navigator.geolocation.getCurrentPosition(function(position) {\n        that.state.mapPosition.lat = position.coords.latitude;\n        that.state.mapPosition.lng = position.coords.longitude;\n        that.next()\n      }, function() {\n        console.warn(\"getCurrentPosition: Error!\")\n      });\n    } else {\n      // Browser doesn't support Geolocation\n      console.warn(\"Browser doesn't support Geolocation\")\n    }\n\n    \n  };\n\n  next() {\n    Geocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\n      response => {\n        const address = response.results[0].formatted_address,\n        addressArray =  response.results[0].address_components,\n        city = this.getCity( addressArray ),\n        area = this.getArea( addressArray ),\n        state = this.getState( addressArray );\n        console.log( 'city', city, area, state );\n    \n        this.setState( {\n          address: ( address ) ? address : '',\n          area: ( area ) ? area : '',\n          city: ( city ) ? city : '',\n          state: ( state ) ? state : '',\n        } )\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n  /**\n    * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n    *\n    * @param nextProps\n    * @param nextState\n    * @return {boolean}\n    */\n  shouldComponentUpdate( nextProps, nextState ){\n    if (\n      this.state.markerPosition.lat !== this.props.center.lat ||\n      this.state.address !== nextState.address ||\n      this.state.city !== nextState.city ||\n      this.state.area !== nextState.area ||\n      this.state.state !== nextState.state\n    ) {\n      return true\n    } else if ( this.props.center.lat === nextProps.center.lat ){\n      return false\n    }\n  }\n  /**\n    * Get the city and set the city input value to the one selected\n    *\n    * @param addressArray\n    * @return {string}\n    */\n  getCity = ( addressArray ) => {\n    console.warn(\"getCity: addressArray\", addressArray)\n    let city = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n      if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n        city = addressArray[ i ].long_name;\n        return city;\n      }\n    }\n  };\n  /**\n    * Get the area and set the area input value to the one selected\n    *\n    * @param addressArray\n    * @return {string}\n    */\n  getArea = ( addressArray ) => {\n    let area = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n      if ( addressArray[ i ].types[0]  ) {\n        for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\n          if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\n            area = addressArray[ i ].long_name;\n            return area;\n          }\n        }\n      }\n    }\n  };\n  /**\n    * Get the address and set the address input value to the one selected\n    *\n    * @param addressArray\n    * @return {string}\n    */\n  getState = ( addressArray ) => {\n    let state = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n      for( let i = 0; i < addressArray.length; i++ ) {\n        if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n          state = addressArray[ i ].long_name;\n          return state;\n        }\n      }\n    }\n  };\n  /**\n    * And function for city,state and address input\n    * @param event\n    */\n  onChange = ( event ) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  /**\n    * This Event triggers when the marker window is closed\n    *\n    * @param event\n    */\n  onInfoWindowClose = ( event ) => {\n    console.warn(\"Infow window has been closed!!!\", event)\n  };\n  /**\n    * When the user types an address in the search box\n    * @param place\n    */\n  onPlaceSelected = ( place ) => {\n    console.warn(\"place =\", place)\n    const address = place.formatted_address,\n    addressArray =  place.address_components,\n    city = this.getCity( addressArray ),\n    area = this.getArea( addressArray ),\n    state = this.getState( addressArray ),\n    latValue = place.geometry.location.lat(),\n    lngValue = place.geometry.location.lng();\n    // Set these values in the state.\n    this.setState({\n      address: ( address ) ? address : '',\n      area: ( area ) ? area : '',\n      city: ( city ) ? city : '',\n      state: ( state ) ? state : '',\n      markerPosition: {\n      lat: latValue,\n      lng: lngValue\n    },\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue\n      },\n    })\n  };\n  /**\n    * When the marker is dragged you get the lat and long using the functions available from event object.\n    * Use geocode to get the address, city, area and state from the lat and lng positions.\n    * And then set those values in the state.\n    *\n    * @param event\n    */\n  onMarkerDragEnd = ( event ) => {\n    console.log( 'event', event );\n    let newLat = event.latLng.lat(),\n    newLng = event.latLng.lng(),\n    addressArray = [];\n    Geocode.fromLatLng( newLat , newLng ).then(\n      response => {\n        const address = response.results[0].formatted_address,\n        addressArray =  response.results[0].address_components,\n        city = this.getCity( addressArray ),\n        area = this.getArea( addressArray ),\n        state = this.getState( addressArray );\n        this.setState( {\n          address: ( address ) ? address : '',\n          area: ( area ) ? area : '',\n          city: ( city ) ? city : '',\n          state: ( state ) ? state : ''\n        } )\n      },\n     error => {\n      console.error(error);\n     }\n    );\n  };\n  render(){\n    const AsyncMap = withScriptjs(\n      withGoogleMap(\n        props => (\n          <GoogleMap google={ this.props.google }\n            defaultZoom={ this.props.zoom }\n            defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n          >\n            \n            \n\n            <Marker \n              google={ this.props.google }\n              name={'Dolores park'}\n              draggable={true}\n              onDragEnd={ this.onMarkerDragEnd }\n              position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n            />\n            <Marker />\n            <InfoWindow\n              onClose={ this.onInfoWindowClose }\n              position={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\n            >\n              <div>\n                <span style={{ padding: 0, margin: 0, color: 'black'}}>{ this.state.address }</span>\n              </div>\n            </InfoWindow>\n          </GoogleMap>\n        )\n      )\n    );\n    let map;\n    if( this.props.center.lat !== undefined ) {\n      map = <div className=\"col\">\n        <AsyncMap\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\"\n          loadingElement={\n            <div style={{ height: `100%` }} />\n          }\n          containerElement={\n            <div style={{ height: this.props.height, width: `100%` }} />\n          }\n          mapElement={\n            <div style={{ height: `100%` }} />\n          }\n        />\n        <div style={{ 'marginTop': `50px`, 'marginBottom': `50px` }}>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">City</label>\n            <input type=\"text\" name=\"city\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.city }/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">Area</label>\n            <input type=\"text\" name=\"area\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.area }/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">State</label>\n            <input type=\"text\" name=\"state\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.state }/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">Address</label>\n            <input type=\"text\" name=\"address\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.address }/>\n          </div>\n        </div>\n      </div>\n    } else {\n      map = <div style={{ height: this.props.height }} />\n    }\n    return( map )\n  }\n}\nexport default Map\n"]},"metadata":{},"sourceType":"module"}