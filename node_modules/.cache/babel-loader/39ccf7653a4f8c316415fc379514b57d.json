{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Planit.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //import PlacesWithStandaloneSearchBox from './SearchBox.js';\n\nimport Map from './Map';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\"; // searchBox\n\nconst _require = require(\"recompose\"),\n      compose = _require.compose,\n      withProps = _require.withProps,\n      lifecycle = _require.lifecycle;\n\nconst _require2 = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\"),\n      StandaloneSearchBox = _require2.StandaloneSearchBox;\n\nconst PlacesWithStandaloneSearchBox = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    const refs = {};\n    this.setState({\n      places: [],\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        console.warn(\"DEBUG DEBUG onPlacesChanged: places\", places);\n        this.setState({\n          places\n        });\n      }\n    });\n  }\n\n}), withScriptjs)(props => React.createElement(\"div\", {\n  \"data-standalone-searchbox\": \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(StandaloneSearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Customized your placeholder\",\n  style: {\n    boxSizing: `border-box`,\n    border: `1px solid transparent`,\n    width: `240px`,\n    height: `32px`,\n    padding: `0 12px`,\n    borderRadius: `3px`,\n    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    fontSize: `14px`,\n    outline: `none`,\n    textOverflow: `ellipses`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n})), React.createElement(\"ol\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, props.places.map(({\n  place_id,\n  formatted_address,\n  geometry: {\n    location\n  }\n}) => React.createElement(\"li\", {\n  key: place_id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, formatted_address, \" at \", \"(\", location.lat(), \", \", location.lng(), \")\"))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, props.places.map(({\n  formatted_address: {\n    location\n  }\n}) => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, formatted_address)))));\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, text);\n\nclass SimpleMap extends Component {\n  render() {\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(GoogleMap, {\n      google: this.props.google,\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: 0,\n        lng: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n    let map;\n\n    if (this.props.center.lat !== undefined) {\n      map = React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(AsyncMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: this.props.height,\n            width: `100%`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    } else {\n      map = React.createElement(\"div\", {\n        style: {\n          height: this.props.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    }\n\n    return map;\n  }\n\n}\n\nSimpleMap.defaultProps = {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n};\nconst containerStyles = {\n  width: '100%'\n};\nlet currentPos = {\n  lat: 39.742043,\n  lng: -104.991531\n};\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: containerStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \" Planit - The best way to plan your next adventure. \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Plan a trip from a, b, c and decide how long you want to spend in each spot to generate an itinerary. Planit will show you transportation, lodging and possible points of interest in the areas of travel including an estimated price breakdown. Select the desired options and finalize your itinerary and you\\u2019re on your way!\"), React.createElement(Map, {\n      google: this.props.google,\n      center: {\n        lat: currentPos.lat,\n        lng: currentPos.lng\n      },\n      height: \"300px\",\n      zoom: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Search Box!\"), React.createElement(PlacesWithStandaloneSearchBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default MapContainer;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Planit.js"],"names":["React","Component","Map","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","require","compose","withProps","lifecycle","StandaloneSearchBox","PlacesWithStandaloneSearchBox","googleMapURL","loadingElement","height","containerElement","componentWillMount","refs","setState","places","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","console","warn","props","bounds","boxSizing","border","width","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","map","place_id","formatted_address","geometry","location","lat","lng","AnyReactComponent","text","SimpleMap","render","AsyncMap","google","center","undefined","defaultProps","zoom","containerStyles","currentPos","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n//import PlacesWithStandaloneSearchBox from './SearchBox.js';\nimport Map from './Map';\n\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\n// searchBox\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst { StandaloneSearchBox } = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n      this.setState({\n        places: [],\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          console.warn(\"DEBUG DEBUG onPlacesChanged: places\", places)\n          this.setState({\n            places\n          });\n        }\n      });\n    }\n  }),\n  withScriptjs\n)(props => (\n\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Customized your placeholder\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`\n        }}\n      />\n    </StandaloneSearchBox>\n    <ol>\n      {props.places.map(\n        ({ place_id, formatted_address, geometry: { location } }) => (\n          <li key={place_id}>\n            {formatted_address}\n            {\" at \"}\n            ({location.lat()}, {location.lng()})\n          </li>\n        )\n      )}\n    </ol>\n    <div>\n      {props.places.map(\n        ({ formatted_address: { location } }) => (\n          <p>\n            {formatted_address}\n          </p>\n        )\n      )}\n    </div>\n\n  </div>\n\n\n\n));\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass SimpleMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    zoom: 11\n  };\n\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap(\n        props => (\n          <div>\n            \n            <GoogleMap google={ this.props.google }\n              defaultZoom={ 10 }\n              defaultCenter={{ lat: 0, lng: 0 }}\n            >\n            </GoogleMap>\n          \n          </div>\n        )\n      )\n    );\n    let map;\n    if( this.props.center.lat !== undefined ) {\n      map = <div className=\"col\">\n        <AsyncMap\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\"\n          loadingElement={\n            <div style={{ height: `100%` }} />\n          }\n          containerElement={\n            <div style={{ height: this.props.height, width: `100%` }} />\n          }\n          mapElement={\n            <div style={{ height: `100%` }} />\n          }\n        />\n        \n      </div>\n    } else {\n      map = <div style={{ height: this.props.height }} />\n    }\n    return( map )\n    \n  }\n}\n\n\n\nconst containerStyles = {\n  width: '100%',\n};\nlet currentPos = {\n  lat:39.742043,\n  lng:-104.991531\n};\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={containerStyles}>\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <h2> Planit - The best way to plan your next adventure. </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in each spot \n              to generate an itinerary. Planit will show you transportation, lodging and \n              possible points of interest in the areas of travel including an estimated price \n              breakdown. Select the desired options and finalize your itinerary and you’re on your way!\n            </p>\n            <Map\n             google={this.props.google}\n             center={{lat: currentPos.lat, lng: currentPos.lng}} \n             height='300px'\n             zoom={10}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <h1>Search Box!</h1>\n            <PlacesWithStandaloneSearchBox/>\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapContainer\n"]},"metadata":{},"sourceType":"module"}