{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Planit.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //import PlacesWithStandaloneSearchBox from './SearchBox.js';\n\nimport Map from './Map';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\"; // searchBox\n\nconst _require = require(\"recompose\"),\n      compose = _require.compose,\n      withProps = _require.withProps,\n      lifecycle = _require.lifecycle;\n\nconst _require2 = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\"),\n      StandaloneSearchBox = _require2.StandaloneSearchBox;\n\nconst MyMapComponent = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: props.defaultCenter,\n  center: props.center,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n})));\nconst PlacesWithStandaloneSearchBox = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    const refs = {};\n    this.setState({\n      places: [],\n      firstPlace: {},\n      firstPlaceLat: 0,\n      firstPlaceLng: 0,\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const firstPlace = places[0];\n        const firstPlaceLat = firstPlace.geometry.location.lat();\n        const firstPlaceLng = firstPlace.geometry.location.lng();\n        console.warn(\"DEBUG DEBUG onPlacesChanged: firstPlace\", firstPlace);\n        this.setState({\n          places,\n          firstPlace,\n          firstPlaceLat,\n          firstPlaceLng\n        });\n      }\n    });\n  }\n\n}), withScriptjs)(props => React.createElement(\"div\", {\n  \"data-standalone-searchbox\": \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(StandaloneSearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Find your destination\",\n  style: {\n    boxSizing: `border-box`,\n    border: `1px solid transparent`,\n    width: `240px`,\n    height: `32px`,\n    padding: `0 12px`,\n    borderRadius: `3px`,\n    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    fontSize: `14px`,\n    outline: `none`,\n    textOverflow: `ellipses`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n})), React.createElement(MyMapComponent, {\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\",\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`,\n      width: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }),\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }),\n  defaultCenter: {\n    lat: props.firstPlaceLat,\n    lng: props.firstPlaceLng\n  },\n  center: {\n    lat: props.firstPlaceLat,\n    lng: props.firstPlaceLng\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n})));\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, text);\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    let currentLocation = navigator.geolocation.getCurrentPosition();\n    console.warn(\"currentLocation\", currentLocation);\n    return currentLocation;\n  } else {\n    console.warn(\"Geolocation is not supported by this browser.\");\n    return;\n  }\n}\n\nconst containerStyles = {\n  width: '100%'\n};\nlet currentPos = {\n  lat: 39.742043,\n  lng: -104.991531\n};\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: containerStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" Planit - The best way to plan your next adventure. \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Plan a trip from a, b, c and decide how long you want to spend in each spot to generate an itinerary. Planit will show you transportation, lodging and possible points of interest in the areas of travel including an estimated price breakdown. Select the desired options and finalize your itinerary and you\\u2019re on your way!\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Search\"), React.createElement(PlacesWithStandaloneSearchBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))));\n  }\n\n} // <Map\n//  google={this.props.google}\n//  center={{lat: currentPos.lat, lng: currentPos.lng}} \n//  height='300px'\n//  zoom={10}\n// />\n\nexport default MapContainer;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Planit.js"],"names":["React","Component","Map","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","require","compose","withProps","lifecycle","StandaloneSearchBox","MyMapComponent","props","defaultCenter","center","PlacesWithStandaloneSearchBox","googleMapURL","loadingElement","height","containerElement","componentWillMount","refs","setState","places","firstPlace","firstPlaceLat","firstPlaceLng","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","geometry","location","lat","lng","console","warn","bounds","boxSizing","border","width","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","AnyReactComponent","text","getLocation","navigator","geolocation","currentLocation","getCurrentPosition","containerStyles","currentPos","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n//import PlacesWithStandaloneSearchBox from './SearchBox.js';\nimport Map from './Map';\n\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\n// searchBox\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst { StandaloneSearchBox } = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\n\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={ 8 }\n    defaultCenter={props.defaultCenter}\n    center={props.center}\n  >\n  </GoogleMap>\n))\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n      this.setState({\n        places: [],\n        firstPlace: {},\n        firstPlaceLat: 0,\n        firstPlaceLng: 0,\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();      \n          const firstPlace = places[0];\n          const firstPlaceLat = firstPlace.geometry.location.lat()\n          const firstPlaceLng = firstPlace.geometry.location.lng()\n          console.warn(\"DEBUG DEBUG onPlacesChanged: firstPlace\", firstPlace)\n          this.setState({\n            places, firstPlace, firstPlaceLat, firstPlaceLng\n          });\n        }\n      });\n    }\n  }),\n  withScriptjs\n)(props => (\n\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Find your destination\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`\n        }}\n      />\n    </StandaloneSearchBox>\n    <MyMapComponent\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\"\n      containerElement={\n        <div style={{ height: `400px`, width: `100%` }} />\n      }\n      mapElement={\n        <div style={{ height: `100%` }} />\n      }    \n      loadingElement={\n        <div style={{ height: `100%` }} />\n      }\n      defaultCenter={{ lat: props.firstPlaceLat, lng: props.firstPlaceLng }}\n      center={{ lat: props.firstPlaceLat, lng: props.firstPlaceLng }}\n    />\n  </div>\n\n));\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    let currentLocation = navigator.geolocation.getCurrentPosition();\n    console.warn(\"currentLocation\", currentLocation);\n    return currentLocation\n  } else {\n    console.warn(\"Geolocation is not supported by this browser.\");\n    return\n  }\n}\n\n\nconst containerStyles = {\n  width: '100%',\n};\nlet currentPos = {\n  lat:39.742043,\n  lng:-104.991531\n};\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={containerStyles}>\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <h2> Planit - The best way to plan your next adventure. </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in each spot \n              to generate an itinerary. Planit will show you transportation, lodging and \n              possible points of interest in the areas of travel including an estimated price \n              breakdown. Select the desired options and finalize your itinerary and you’re on your way!\n            </p>\n            \n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <h1>Search</h1>\n            <PlacesWithStandaloneSearchBox/>\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\n// <Map\n//  google={this.props.google}\n//  center={{lat: currentPos.lat, lng: currentPos.lng}} \n//  height='300px'\n//  zoom={10}\n// />\n\nexport default MapContainer\n"]},"metadata":{},"sourceType":"module"}