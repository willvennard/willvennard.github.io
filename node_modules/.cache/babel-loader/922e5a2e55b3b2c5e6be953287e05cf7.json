{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Planit.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Map from './Map';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\"; // searchBox\n\nconst _require = require(\"recompose\"),\n      compose = _require.compose,\n      withProps = _require.withProps,\n      lifecycle = _require.lifecycle;\n\nconst _require2 = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\"),\n      StandaloneSearchBox = _require2.StandaloneSearchBox;\n\nconst MyMapComponent = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  center: props.center,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})));\nconst PlacesWithStandaloneSearchBox = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_API_KEY + \"&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    const refs = {};\n\n    this.showPosition = position => {\n      const places = [];\n      const firstPlace = {};\n      const firstPlaceLat = position.coords.latitude;\n      const firstPlaceLng = position.coords.longitude;\n      this.setState({\n        places,\n        firstPlace,\n        firstPlaceLat,\n        firstPlaceLng\n      });\n    };\n\n    this.getCurrentLocation = function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      } else {\n        console.warn(\"getCurrentLocation: Geolocation is not supported by this browser.\");\n      }\n    };\n\n    this.setState({\n      places: [],\n      firstPlace: {},\n      firstPlaceLat: 39.74,\n      firstPlaceLng: -104.991531,\n      zoon: 10,\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n        this.getCurrentLocation();\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const firstPlace = places[0];\n        const firstPlaceLat = firstPlace.geometry.location.lat();\n        const firstPlaceLng = firstPlace.geometry.location.lng();\n        this.setState({\n          places,\n          firstPlace,\n          firstPlaceLat,\n          firstPlaceLng\n        });\n      }\n    });\n  }\n\n}), withScriptjs)(props => React.createElement(\"div\", {\n  \"data-standalone-searchbox\": \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(StandaloneSearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Find your destination\",\n  style: {\n    boxSizing: `border-box`,\n    border: `1px solid transparent`,\n    width: `240px`,\n    height: `32px`,\n    padding: `0 12px`,\n    borderRadius: `3px`,\n    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    fontSize: `14px`,\n    outline: `none`,\n    textOverflow: `ellipses`,\n    marginBottom: `2em`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n})), React.createElement(MyMapComponent, {\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_API_KEY + \"&libraries=places\",\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`,\n      width: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }),\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }),\n  center: {\n    lat: props.firstPlaceLat,\n    lng: props.firstPlaceLng\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n})));\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, text);\n\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid planit-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" Planit - The best way to plan your next adventure. \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Plan a trip from a, b, c and decide how long you want to spend in each spot to generate an itinerary. Planit will show you transportation, lodging and possible points of interest in the areas of travel including an estimated price breakdown. Select the desired options and finalize your itinerary and you\\u2019re on your way!\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(PlacesWithStandaloneSearchBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default MapContainer;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Planit.js"],"names":["React","Component","Map","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","require","compose","withProps","lifecycle","StandaloneSearchBox","MyMapComponent","props","center","PlacesWithStandaloneSearchBox","googleMapURL","process","env","REACT_APP_API_KEY","loadingElement","height","containerElement","componentWillMount","refs","showPosition","position","places","firstPlace","firstPlaceLat","coords","latitude","firstPlaceLng","longitude","setState","getCurrentLocation","navigator","geolocation","getCurrentPosition","console","warn","zoon","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","geometry","location","lat","lng","bounds","boxSizing","border","width","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","marginBottom","AnyReactComponent","text","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Map from './Map';\n\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\n// searchBox\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst { StandaloneSearchBox } = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={ 8 }\n    center={props.center}\n  >\n  </GoogleMap>\n))\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=\"+process.env.REACT_APP_API_KEY+\"&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n      this.showPosition = (position) => {\n        const places = [];\n        const firstPlace = {};\n        const firstPlaceLat = position.coords.latitude;\n        const firstPlaceLng = position.coords.longitude;\n\n        this.setState({\n          places, firstPlace, firstPlaceLat, firstPlaceLng\n        });\n      }\n      this.getCurrentLocation = function () {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n          console.warn(\"getCurrentLocation: Geolocation is not supported by this browser.\")\n        }\n      }\n\n      this.setState({\n        places: [],\n        firstPlace: {},\n        firstPlaceLat: 39.74,\n        firstPlaceLng: -104.991531,\n        zoon: 10,\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n          this.getCurrentLocation();\n        },\n\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          const firstPlace = places[0];\n          const firstPlaceLat = firstPlace.geometry.location.lat()\n          const firstPlaceLng = firstPlace.geometry.location.lng()\n          this.setState({\n            places, firstPlace, firstPlaceLat, firstPlaceLng\n          });\n        }\n      });\n\n    }\n  }),\n  withScriptjs\n)(props => (\n\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Find your destination\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`,\n          marginBottom: `2em`\n        }}\n      />\n    </StandaloneSearchBox>\n    <MyMapComponent\n      googleMapURL={\"https://maps.googleapis.com/maps/api/js?key=\"+process.env.REACT_APP_API_KEY+\"&libraries=places\"}\n      containerElement={\n        <div style={{ height: `400px`, width: `100%` }} />\n      }\n      mapElement={\n        <div style={{ height: `100%` }} />\n      }\n      loadingElement={\n        <div style={{ height: `100%` }} />\n      }\n      center={{ lat: props.firstPlaceLat, lng: props.firstPlaceLng }}\n    />\n  </div>\n\n));\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid planit-container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h2> Planit - The best way to plan your next adventure. </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in each spot\n              to generate an itinerary. Planit will show you transportation, lodging and\n              possible points of interest in the areas of travel including an estimated price\n              breakdown. Select the desired options and finalize your itinerary and you’re on your way!\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <PlacesWithStandaloneSearchBox/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapContainer\n"]},"metadata":{},"sourceType":"module"}