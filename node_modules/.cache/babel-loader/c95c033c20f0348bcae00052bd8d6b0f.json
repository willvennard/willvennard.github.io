{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Planit.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // Google maps api key AIzaSyAQnnrSxmjA4pPJuFsiSUBjZ0gL0Uq9D7Q\n\nimport Map from './Map';\nconst containerStyles = {\n  width: '100%'\n};\nlet currentPos = {}; // Try HTML5 geolocation.\n\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(function (position) {\n    currentPos = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    };\n  }, function () {\n    console.warn(\"getCurrentPosition: Error!\");\n  });\n} else {\n  // Browser doesn't support Geolocation\n  console.warn(\"Browser doesn't support Geolocation\");\n}\n\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: containerStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" Planit - The best way to plan your next adventure. \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Plan a trip from a, b, c and decide how long you want to spend in each spot to generate an itinerary. Planit will show you transportation, lodging and possible points of interest in the areas of travel including an estimated price breakdown. Select the desired options and finalize your itinerary and you\\u2019re on your way!\"), React.createElement(Map, {\n      google: this.props.google,\n      center: {\n        lat: 39.742043,\n        lng: -104.991531\n      },\n      height: \"300px\",\n      zoom: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default MapContainer;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Planit.js"],"names":["React","Component","Map","containerStyles","width","currentPos","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","console","warn","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","render","google"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CACA;;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE;AADe,CAAxB;AAGA,IAAIC,UAAU,GAAG,EAAjB,C,CACA;;AACA,IAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1DJ,IAAAA,UAAU,GAAG;AACXK,MAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,QADV;AAEXC,MAAAA,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG;AAFV,KAAb;AAID,GALD,EAKG,YAAW;AACZC,IAAAA,OAAO,CAACC,IAAR,CAAa,4BAAb;AACD,GAPD;AAQD,CATD,MASO;AACL;AACAD,EAAAA,OAAO,CAACC,IAAR,CAAa,qCAAb;AACD;;AAED,OAAO,MAAMC,YAAN,SAA2BhB,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CiB,KAD0C,GAClC;AACNC,MAAAA,iBAAiB,EAAE,KADb;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,aAAa,EAAE;AAHT,KADkC;;AAAA,SAO1CC,aAP0C,GAO1B,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZL,MAAAA,aAAa,EAAEE,KADH;AAEZH,MAAAA,YAAY,EAAEI,MAFF;AAGZL,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CARwC;;AAAA,SAc1CQ,OAd0C,GAchCJ,KAAK,IAAI;AACjB,UAAI,KAAKL,KAAL,CAAWC,iBAAf,EAAkC;AAChC,aAAKO,QAAL,CAAc;AACZP,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KArByC;AAAA;;AAwB1CQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAEzB,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+UAFF,EAQE,oBAAC,GAAD;AACC,MAAA,MAAM,EAAE,KAAKoB,KAAL,CAAWM,MADpB;AAEC,MAAA,MAAM,EAAE;AAACnB,QAAAA,GAAG,EAAE,SAAN;AAAiBG,QAAAA,GAAG,EAAE,CAAC;AAAvB,OAFT;AAGC,MAAA,MAAM,EAAC,OAHR;AAIC,MAAA,IAAI,EAAE,EAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAFF,CADF,CADF;AAsBD;;AA/CyC;AAiD5C,eAAeI,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// Google maps api key AIzaSyAQnnrSxmjA4pPJuFsiSUBjZ0gL0Uq9D7Q\n\nimport Map from './Map';\n\nconst containerStyles = {\n  width: '100%',\n};\nlet currentPos = {};\n// Try HTML5 geolocation.\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(function(position) {\n    currentPos = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    };\n  }, function() {\n    console.warn(\"getCurrentPosition: Error!\")\n  });\n} else {\n  // Browser doesn't support Geolocation\n  console.warn(\"Browser doesn't support Geolocation\")\n}\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={containerStyles}>\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <h2> Planit - The best way to plan your next adventure. </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in each spot \n              to generate an itinerary. Planit will show you transportation, lodging and \n              possible points of interest in the areas of travel including an estimated price \n              breakdown. Select the desired options and finalize your itinerary and youâ€™re on your way!\n            </p>\n            <Map\n             google={this.props.google}\n             center={{lat: 39.742043, lng: -104.991531}} \n             height='300px'\n             zoom={10}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MapContainer"]},"metadata":{},"sourceType":"module"}