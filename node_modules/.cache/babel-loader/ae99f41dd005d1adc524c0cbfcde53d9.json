{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Planit.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //import PlacesWithStandaloneSearchBox from './SearchBox.js';\n\nimport Map from './Map';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\"; // searchBox\n\nconst _require = require(\"recompose\"),\n      compose = _require.compose,\n      withProps = _require.withProps,\n      lifecycle = _require.lifecycle;\n\nconst _require2 = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\"),\n      StandaloneSearchBox = _require2.StandaloneSearchBox;\n\nlet currentPos = {\n  lat: 39.742043,\n  lng: -104.991531\n};\nconst MyMapComponent = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  center: props.center,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})));\nconst PlacesWithStandaloneSearchBox = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    const refs = {};\n\n    this.showPosition = position => {\n      const places = [];\n      const firstPlace = {};\n      const firstPlaceLat = position.coords.latitude;\n      const firstPlaceLng = position.coords.longitude;\n      this.setState({\n        places,\n        firstPlace,\n        firstPlaceLat,\n        firstPlaceLng\n      });\n    };\n\n    this.getCurrentLocation = function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      } else {\n        console.warn(\"getCurrentLocation: Geolocation is not supported by this browser.\");\n      }\n    };\n\n    this.setState({\n      places: [],\n      firstPlace: {},\n      firstPlaceLat: 39.74,\n      firstPlaceLng: -104.991531,\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n        this.getCurrentLocation();\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const firstPlace = places[0];\n        const firstPlaceLat = firstPlace.geometry.location.lat();\n        const firstPlaceLng = firstPlace.geometry.location.lng();\n        this.setState({\n          places,\n          firstPlace,\n          firstPlaceLat,\n          firstPlaceLng\n        });\n      }\n    });\n  }\n\n}), withScriptjs)(props => React.createElement(\"div\", {\n  \"data-standalone-searchbox\": \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, React.createElement(StandaloneSearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Find your destination\",\n  style: {\n    boxSizing: `border-box`,\n    border: `1px solid transparent`,\n    width: `240px`,\n    height: `32px`,\n    padding: `0 12px`,\n    borderRadius: `3px`,\n    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    fontSize: `14px`,\n    outline: `none`,\n    textOverflow: `ellipses`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n})), React.createElement(MyMapComponent, {\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\",\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`,\n      width: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }),\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }),\n  center: {\n    lat: props.firstPlaceLat,\n    lng: props.firstPlaceLng\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n})));\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, text);\n\nconst containerStyles = {\n  width: '100%'\n};\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: containerStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" Planit - The best way to plan your next adventure. \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Plan a trip from a, b, c and decide how long you want to spend in each spot to generate an itinerary. Planit will show you transportation, lodging and possible points of interest in the areas of travel including an estimated price breakdown. Select the desired options and finalize your itinerary and you\\u2019re on your way!\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(PlacesWithStandaloneSearchBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default MapContainer;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Planit.js"],"names":["React","Component","Map","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","require","compose","withProps","lifecycle","StandaloneSearchBox","currentPos","lat","lng","MyMapComponent","props","center","PlacesWithStandaloneSearchBox","googleMapURL","loadingElement","height","containerElement","componentWillMount","refs","showPosition","position","places","firstPlace","firstPlaceLat","coords","latitude","firstPlaceLng","longitude","setState","getCurrentLocation","navigator","geolocation","getCurrentPosition","console","warn","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","geometry","location","bounds","boxSizing","border","width","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","AnyReactComponent","text","containerStyles","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n//import PlacesWithStandaloneSearchBox from './SearchBox.js';\nimport Map from './Map';\n\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\n// searchBox\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst { StandaloneSearchBox } = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\nlet currentPos = {\n  lat:39.742043,\n  lng:-104.991531\n};\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={ 8 }\n    center={props.center}\n  >\n  </GoogleMap>\n))\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n      this.showPosition = (position) => {\n        const places = [];  \n        const firstPlace = {};\n        const firstPlaceLat = position.coords.latitude;\n        const firstPlaceLng = position.coords.longitude;\n\n        this.setState({\n          places, firstPlace, firstPlaceLat, firstPlaceLng\n        });\n      }\n      this.getCurrentLocation = function () {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n          console.warn(\"getCurrentLocation: Geolocation is not supported by this browser.\")\n        }\n      }\n\n      this.setState({\n        places: [],\n        firstPlace: {},\n        firstPlaceLat: 39.74,\n        firstPlaceLng: -104.991531,\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n          this.getCurrentLocation();\n        },\n       \n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();      \n          const firstPlace = places[0];\n          const firstPlaceLat = firstPlace.geometry.location.lat()\n          const firstPlaceLng = firstPlace.geometry.location.lng()\n          this.setState({\n            places, firstPlace, firstPlaceLat, firstPlaceLng\n          });\n        }\n      });\n\n    }    \n  }),\n  withScriptjs\n)(props => (\n\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Find your destination\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`\n        }}\n      />\n    </StandaloneSearchBox>\n    <MyMapComponent\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\"\n      containerElement={\n        <div style={{ height: `400px`, width: `100%` }} />\n      }\n      mapElement={\n        <div style={{ height: `100%` }} />\n      }    \n      loadingElement={\n        <div style={{ height: `100%` }} />\n      }\n      center={{ lat: props.firstPlaceLat, lng: props.firstPlaceLng }}\n    />\n  </div>\n\n));\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst containerStyles = {\n  width: '100%',\n};\n\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={containerStyles}>\n        <div className=\"row\" style={{display: 'none'}}>\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <h2> Planit - The best way to plan your next adventure. </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in each spot \n              to generate an itinerary. Planit will show you transportation, lodging and \n              possible points of interest in the areas of travel including an estimated price \n              breakdown. Select the desired options and finalize your itinerary and you’re on your way!\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <PlacesWithStandaloneSearchBox/>\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapContainer\n"]},"metadata":{},"sourceType":"module"}