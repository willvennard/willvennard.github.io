{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Planit.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport planitLogo from \"./images/planitLogo.png\";\nimport Map from \"./Map\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\"; // searchBox\n\nconst _require = require(\"recompose\"),\n      compose = _require.compose,\n      withProps = _require.withProps,\n      lifecycle = _require.lifecycle;\n\nconst _require2 = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\"),\n      StandaloneSearchBox = _require2.StandaloneSearchBox;\n\nconst MyMapComponent = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  center: props.center,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n})));\nconst PlacesWithStandaloneSearchBox = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_API_KEY + \"&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    window.scrollTo(0, 0);\n    const refs = {};\n\n    this.showPosition = position => {\n      const places = [];\n      const firstPlace = {};\n      const firstPlaceLat = position.coords.latitude;\n      const firstPlaceLng = position.coords.longitude;\n      this.setState({\n        places,\n        firstPlace,\n        firstPlaceLat,\n        firstPlaceLng\n      });\n    };\n\n    this.getCurrentLocation = function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      } else {\n        console.warn(\"getCurrentLocation: Geolocation is not supported by this browser.\");\n      }\n    };\n\n    this.setState({\n      places: [],\n      firstPlace: {},\n      firstPlaceLat: 39.74,\n      firstPlaceLng: -104.991531,\n      zoon: 10,\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n        this.getCurrentLocation();\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const firstPlace = places[0];\n        const firstPlaceLat = firstPlace.geometry.location.lat();\n        const firstPlaceLng = firstPlace.geometry.location.lng();\n        this.setState({\n          places,\n          firstPlace,\n          firstPlaceLat,\n          firstPlaceLng\n        });\n      }\n    });\n  }\n\n}), withScriptjs)(props => React.createElement(\"div\", {\n  \"data-standalone-searchbox\": \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, React.createElement(StandaloneSearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Find your destination\",\n  style: {\n    boxSizing: `border-box`,\n    border: `1px solid transparent`,\n    width: `240px`,\n    height: `32px`,\n    padding: `0 12px`,\n    borderRadius: `3px`,\n    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    fontSize: `14px`,\n    outline: `none`,\n    textOverflow: `ellipses`,\n    margin: `1em 0 2em 0`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n})), React.createElement(MyMapComponent, {\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_API_KEY + \"&libraries=places\",\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`,\n      width: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }),\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }),\n  center: {\n    lat: props.firstPlaceLat,\n    lng: props.firstPlaceLng\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n})));\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}, text);\n\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid planit-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: planitLogo,\n      class: \"planit-logo\",\n      alt: \"Planit Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      style: {\n        display: \"inline\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \" \", \"Planit - The best way to plan your next adventure.\", \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Plan a trip from a, b, c and decide how long you want to spend in each spot to generate an itinerary. Planit will show you transportation, lodging and possible points of interest in the areas of travel including an estimated price breakdown. Select the desired options and finalize your itinerary and you\\u2019re on your way!\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(PlacesWithStandaloneSearchBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default MapContainer;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Planit.js"],"names":["React","Component","planitLogo","Map","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","require","compose","withProps","lifecycle","StandaloneSearchBox","MyMapComponent","props","center","PlacesWithStandaloneSearchBox","googleMapURL","process","env","REACT_APP_API_KEY","loadingElement","height","containerElement","componentWillMount","window","scrollTo","refs","showPosition","position","places","firstPlace","firstPlaceLat","coords","latitude","firstPlaceLng","longitude","setState","getCurrentLocation","navigator","geolocation","getCurrentPosition","console","warn","zoon","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","geometry","location","lat","lng","bounds","boxSizing","border","width","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","margin","AnyReactComponent","text","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport planitLogo from \"./images/planitLogo.png\";\n\nimport Map from \"./Map\";\n\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\n// searchBox\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst {\n  StandaloneSearchBox,\n} = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\nconst MyMapComponent = withScriptjs(\n  withGoogleMap((props) => (\n    <GoogleMap defaultZoom={8} center={props.center}></GoogleMap>\n  ))\n);\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=\" +\n      process.env.REACT_APP_API_KEY +\n      \"&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n  }),\n  lifecycle({\n    componentWillMount() {\n      window.scrollTo(0, 0);\n      const refs = {};\n      this.showPosition = (position) => {\n        const places = [];\n        const firstPlace = {};\n        const firstPlaceLat = position.coords.latitude;\n        const firstPlaceLng = position.coords.longitude;\n\n        this.setState({\n          places,\n          firstPlace,\n          firstPlaceLat,\n          firstPlaceLng,\n        });\n      };\n      this.getCurrentLocation = function () {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n          console.warn(\n            \"getCurrentLocation: Geolocation is not supported by this browser.\"\n          );\n        }\n      };\n\n      this.setState({\n        places: [],\n        firstPlace: {},\n        firstPlaceLat: 39.74,\n        firstPlaceLng: -104.991531,\n        zoon: 10,\n        onSearchBoxMounted: (ref) => {\n          refs.searchBox = ref;\n          this.getCurrentLocation();\n        },\n\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          const firstPlace = places[0];\n          const firstPlaceLat = firstPlace.geometry.location.lat();\n          const firstPlaceLng = firstPlace.geometry.location.lng();\n          this.setState({\n            places,\n            firstPlace,\n            firstPlaceLat,\n            firstPlaceLng,\n          });\n        },\n      });\n    },\n  }),\n  withScriptjs\n)((props) => (\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Find your destination\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`,\n          margin: `1em 0 2em 0`,\n        }}\n      />\n    </StandaloneSearchBox>\n    <MyMapComponent\n      googleMapURL={\n        \"https://maps.googleapis.com/maps/api/js?key=\" +\n        process.env.REACT_APP_API_KEY +\n        \"&libraries=places\"\n      }\n      containerElement={<div style={{ height: `400px`, width: `100%` }} />}\n      mapElement={<div style={{ height: `100%` }} />}\n      loadingElement={<div style={{ height: `100%` }} />}\n      center={{ lat: props.firstPlaceLat, lng: props.firstPlaceLng }}\n    />\n  </div>\n));\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n\n  onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid planit-container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <img src={planitLogo} class=\"planit-logo\" alt=\"Planit Logo\" />\n            <h2 style={{ display: \"inline\" }}>\n              {\" \"}\n              Planit - The best way to plan your next adventure.{\" \"}\n            </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in\n              each spot to generate an itinerary. Planit will show you\n              transportation, lodging and possible points of interest in the\n              areas of travel including an estimated price breakdown. Select the\n              desired options and finalize your itinerary and you’re on your\n              way!\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <PlacesWithStandaloneSearchBox />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapContainer;\n"]},"metadata":{},"sourceType":"module"}