{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Planit.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //import PlacesWithStandaloneSearchBox from './SearchBox.js';\n\nimport Map from './Map';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\"; // searchBox\n\nconst _require = require(\"recompose\"),\n      compose = _require.compose,\n      withProps = _require.withProps,\n      lifecycle = _require.lifecycle;\n\nconst _require2 = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\"),\n      StandaloneSearchBox = _require2.StandaloneSearchBox;\n\nconst MyMapComponent = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: {\n    lat: props.centerLocation.lat,\n    lng: props.centerLocation.lng\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n})));\nconst PlacesWithStandaloneSearchBox = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })\n}), lifecycle({\n  componentWillMount() {\n    const refs = {};\n    this.setState({\n      places: [],\n      firstPlace: {},\n      firstPlaceLat: 0,\n      firstPlaceLng: 0,\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const firstPlace = places[0];\n        const firstPlaceLat = firstPlace.geometry.location.lat;\n        const firstPlaceLng = firstPlace.geometry.location.lng;\n        console.warn(\"DEBUG DEBUG onPlacesChanged: firstPlace\", firstPlace);\n        this.setState({\n          places,\n          firstPlace,\n          firstPlaceLat,\n          firstPlaceLng\n        });\n      }\n    });\n  }\n\n}), withScriptjs)(props => React.createElement(\"div\", {\n  \"data-standalone-searchbox\": \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(StandaloneSearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds,\n  onPlacesChanged: props.onPlacesChanged,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Find your destination\",\n  style: {\n    boxSizing: `border-box`,\n    border: `1px solid transparent`,\n    width: `240px`,\n    height: `32px`,\n    padding: `0 12px`,\n    borderRadius: `3px`,\n    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    fontSize: `14px`,\n    outline: `none`,\n    textOverflow: `ellipses`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n})), React.createElement(\"ol\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, props.places.map(({\n  place_id,\n  formatted_address,\n  geometry: {\n    location\n  }\n}) => React.createElement(\"li\", {\n  key: place_id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, formatted_address, \" at \", \"(\", location.lat(), \", \", location.lng(), \")\"))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, \"First place search:\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, props.firstPlace.formatted_address), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, props.firstPlaceLat), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, props.firstPlaceLng)), React.createElement(MyMapComponent, {\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\",\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: `400px`,\n      width: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }),\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }),\n  centerLocation: props.firstPlaceLocation,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n})));\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, text);\n\nclass SimpleMap extends Component {\n  render() {\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(GoogleMap, {\n      google: this.props.google,\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: 0,\n        lng: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))));\n    let map;\n\n    if (this.props.center.lat !== undefined) {\n      map = React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(AsyncMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: this.props.height,\n            width: `100%`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    } else {\n      map = React.createElement(\"div\", {\n        style: {\n          height: this.props.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      });\n    }\n\n    return map;\n  }\n\n}\n\nSimpleMap.defaultProps = {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n};\nconst containerStyles = {\n  width: '100%'\n};\nlet currentPos = {\n  lat: 39.742043,\n  lng: -104.991531\n};\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: containerStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \" Planit - The best way to plan your next adventure. \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Plan a trip from a, b, c and decide how long you want to spend in each spot to generate an itinerary. Planit will show you transportation, lodging and possible points of interest in the areas of travel including an estimated price breakdown. Select the desired options and finalize your itinerary and you\\u2019re on your way!\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Search Box!\"), React.createElement(PlacesWithStandaloneSearchBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }))));\n  }\n\n} // <Map\n//  google={this.props.google}\n//  center={{lat: currentPos.lat, lng: currentPos.lng}} \n//  height='300px'\n//  zoom={10}\n// />\n\nexport default MapContainer;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Planit.js"],"names":["React","Component","Map","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","require","compose","withProps","lifecycle","StandaloneSearchBox","MyMapComponent","props","lat","centerLocation","lng","PlacesWithStandaloneSearchBox","googleMapURL","loadingElement","height","containerElement","componentWillMount","refs","setState","places","firstPlace","firstPlaceLat","firstPlaceLng","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","geometry","location","console","warn","bounds","boxSizing","border","width","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","map","place_id","formatted_address","firstPlaceLocation","AnyReactComponent","text","SimpleMap","render","AsyncMap","google","center","undefined","defaultProps","zoom","containerStyles","currentPos","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n//import PlacesWithStandaloneSearchBox from './SearchBox.js';\nimport Map from './Map';\n\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\n// searchBox\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst { StandaloneSearchBox } = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\n\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={ 8 }\n    defaultCenter={{ lat: props.centerLocation.lat, lng: props.centerLocation.lng }}\n  >\n  </GoogleMap>\n))\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n      this.setState({\n        places: [],\n        firstPlace: {},\n        firstPlaceLat: 0,\n        firstPlaceLng: 0,\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();      \n          const firstPlace = places[0];\n          const firstPlaceLat = firstPlace.geometry.location.lat\n          const firstPlaceLng = firstPlace.geometry.location.lng\n          console.warn(\"DEBUG DEBUG onPlacesChanged: firstPlace\", firstPlace)\n          this.setState({\n            places, firstPlace, firstPlaceLat, firstPlaceLng\n          });\n        }\n      });\n    }\n  }),\n  withScriptjs\n)(props => (\n\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Find your destination\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`\n        }}\n      />\n    </StandaloneSearchBox>\n    <ol>\n      {props.places.map(\n        ({ place_id, formatted_address, geometry: { location } }) => (\n          <li key={place_id}>\n            {formatted_address}\n            {\" at \"}\n            ({location.lat()}, {location.lng()})\n          </li>\n        )\n      )}\n    </ol>\n    <div>\n      <h1>First place search:</h1>\n      <p>{ props.firstPlace.formatted_address }</p>\n      <p>{ props.firstPlaceLat }</p>\n      <p>{ props.firstPlaceLng }</p>\n    </div>\n\n    <MyMapComponent\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\"\n      containerElement={\n        <div style={{ height: `400px`, width: `100%` }} />\n      }\n      mapElement={\n        <div style={{ height: `100%` }} />\n      }    \n      loadingElement={\n        <div style={{ height: `100%` }} />\n      }\n      centerLocation = { props.firstPlaceLocation }\n    />\n  </div>\n\n\n\n));\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass SimpleMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    zoom: 11\n  };\n\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap(\n        props => (\n          <div>\n            \n            <GoogleMap google={ this.props.google }\n              defaultZoom={ 10 }\n              defaultCenter={{ lat: 0, lng: 0 }}\n            >\n            </GoogleMap>\n          \n          </div>\n        )\n      )\n    );\n    let map;\n    if( this.props.center.lat !== undefined ) {\n      map = <div className=\"col\">\n        <AsyncMap\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAb__W3DvdpBLKSoN6AuMzNZtcrcurvK0I&libraries=places\"\n          loadingElement={\n            <div style={{ height: `100%` }} />\n          }\n          containerElement={\n            <div style={{ height: this.props.height, width: `100%` }} />\n          }\n          mapElement={\n            <div style={{ height: `100%` }} />\n          }\n        />\n        \n      </div>\n    } else {\n      map = <div style={{ height: this.props.height }} />\n    }\n    return( map )\n    \n  }\n}\n\n\n\nconst containerStyles = {\n  width: '100%',\n};\nlet currentPos = {\n  lat:39.742043,\n  lng:-104.991531\n};\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={containerStyles}>\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <h2> Planit - The best way to plan your next adventure. </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in each spot \n              to generate an itinerary. Planit will show you transportation, lodging and \n              possible points of interest in the areas of travel including an estimated price \n              breakdown. Select the desired options and finalize your itinerary and you’re on your way!\n            </p>\n            \n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <h1>Search Box!</h1>\n            <PlacesWithStandaloneSearchBox/>\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\n// <Map\n//  google={this.props.google}\n//  center={{lat: currentPos.lat, lng: currentPos.lng}} \n//  height='300px'\n//  zoom={10}\n// />\n\nexport default MapContainer\n"]},"metadata":{},"sourceType":"module"}