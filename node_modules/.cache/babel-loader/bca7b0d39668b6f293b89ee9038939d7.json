{"ast":null,"code":"import _classCallCheck from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./App.css';import Map from'./Map';import{withGoogleMap,GoogleMap,withScriptjs,InfoWindow,Marker}from\"react-google-maps\";// searchBox\nvar _require=require(\"recompose\"),compose=_require.compose,withProps=_require.withProps,lifecycle=_require.lifecycle;var _require2=require(\"react-google-maps/lib/components/places/StandaloneSearchBox\"),StandaloneSearchBox=_require2.StandaloneSearchBox;var MyMapComponent=withScriptjs(withGoogleMap(function(props){return React.createElement(GoogleMap,{defaultZoom:8,center:props.center});}));var PlacesWithStandaloneSearchBox=compose(withProps({googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=\"+process.env.REACT_APP_API_KEY+\"&v=3.exp&libraries=geometry,drawing,places\",loadingElement:React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:React.createElement(\"div\",{style:{height:\"400px\"}})}),lifecycle({componentWillMount:function componentWillMount(){var _this=this;var refs={};this.showPosition=function(position){var places=[];var firstPlace={};var firstPlaceLat=position.coords.latitude;var firstPlaceLng=position.coords.longitude;_this.setState({places:places,firstPlace:firstPlace,firstPlaceLat:firstPlaceLat,firstPlaceLng:firstPlaceLng});};this.getCurrentLocation=function(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(this.showPosition);}else{console.warn(\"getCurrentLocation: Geolocation is not supported by this browser.\");}};this.setState({places:[],firstPlace:{},firstPlaceLat:39.74,firstPlaceLng:-104.991531,zoon:10,onSearchBoxMounted:function onSearchBoxMounted(ref){refs.searchBox=ref;_this.getCurrentLocation();},onPlacesChanged:function onPlacesChanged(){var places=refs.searchBox.getPlaces();var firstPlace=places[0];var firstPlaceLat=firstPlace.geometry.location.lat();var firstPlaceLng=firstPlace.geometry.location.lng();_this.setState({places:places,firstPlace:firstPlace,firstPlaceLat:firstPlaceLat,firstPlaceLng:firstPlaceLng});}});}}),withScriptjs)(function(props){return React.createElement(\"div\",{\"data-standalone-searchbox\":\"\"},React.createElement(StandaloneSearchBox,{ref:props.onSearchBoxMounted,bounds:props.bounds,onPlacesChanged:props.onPlacesChanged},React.createElement(\"input\",{type:\"text\",placeholder:\"Find your destination\",style:{boxSizing:\"border-box\",border:\"1px solid transparent\",width:\"240px\",height:\"32px\",padding:\"0 12px\",borderRadius:\"3px\",boxShadow:\"0 2px 6px rgba(0, 0, 0, 0.3)\",fontSize:\"14px\",outline:\"none\",textOverflow:\"ellipses\"}})),React.createElement(MyMapComponent,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=\"+process.env.REACT_APP_API_KEY+\"&libraries=places\",containerElement:React.createElement(\"div\",{style:{height:\"400px\",width:\"100%\"}}),mapElement:React.createElement(\"div\",{style:{height:\"100%\"}}),loadingElement:React.createElement(\"div\",{style:{height:\"100%\"}}),center:{lat:props.firstPlaceLat,lng:props.firstPlaceLng}}));});var AnyReactComponent=function AnyReactComponent(_ref){var text=_ref.text;return React.createElement(\"div\",null,text);};var containerStyles={width:'100%'};export var MapContainer=/*#__PURE__*/function(_Component){_inherits(MapContainer,_Component);function MapContainer(){var _getPrototypeOf2;var _this2;_classCallCheck(this,MapContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this2=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this2.state={showingInfoWindow:false,activeMarker:{},selectedPlace:{}};_this2.onMarkerClick=function(props,marker,e){return _this2.setState({selectedPlace:props,activeMarker:marker,showingInfoWindow:true});};_this2.onClose=function(props){if(_this2.state.showingInfoWindow){_this2.setState({showingInfoWindow:false,activeMarker:null});}};return _this2;}_createClass(MapContainer,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"container-fluid\",style:containerStyles},React.createElement(\"div\",{className:\"row\",style:{display:'none'}},React.createElement(\"div\",{className:\"col-2\"}),React.createElement(\"div\",{className:\"col-8\"},React.createElement(\"h2\",null,\" Planit - The best way to plan your next adventure. \"),React.createElement(\"p\",null,\"Plan a trip from a, b, c and decide how long you want to spend in each spot to generate an itinerary. Planit will show you transportation, lodging and possible points of interest in the areas of travel including an estimated price breakdown. Select the desired options and finalize your itinerary and you\\u2019re on your way!\"))),React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-2\"}),React.createElement(\"div\",{className:\"col-8\"},React.createElement(PlacesWithStandaloneSearchBox,null))));}}]);return MapContainer;}(Component);export default MapContainer;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Planit.js"],"names":["React","Component","Map","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","require","compose","withProps","lifecycle","StandaloneSearchBox","MyMapComponent","props","center","PlacesWithStandaloneSearchBox","googleMapURL","process","env","REACT_APP_API_KEY","loadingElement","height","containerElement","componentWillMount","refs","showPosition","position","places","firstPlace","firstPlaceLat","coords","latitude","firstPlaceLng","longitude","setState","getCurrentLocation","navigator","geolocation","getCurrentPosition","console","warn","zoon","onSearchBoxMounted","ref","searchBox","onPlacesChanged","getPlaces","geometry","location","lat","lng","bounds","boxSizing","border","width","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","AnyReactComponent","text","containerStyles","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Map from './Map';\n\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\n// searchBox\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst { StandaloneSearchBox } = require(\"react-google-maps/lib/components/places/StandaloneSearchBox\");\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={ 8 }\n    center={props.center}\n  >\n  </GoogleMap>\n))\n\nconst PlacesWithStandaloneSearchBox = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=\"+process.env.REACT_APP_API_KEY+\"&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n      this.showPosition = (position) => {\n        const places = [];\n        const firstPlace = {};\n        const firstPlaceLat = position.coords.latitude;\n        const firstPlaceLng = position.coords.longitude;\n\n        this.setState({\n          places, firstPlace, firstPlaceLat, firstPlaceLng\n        });\n      }\n      this.getCurrentLocation = function () {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n          console.warn(\"getCurrentLocation: Geolocation is not supported by this browser.\")\n        }\n      }\n\n      this.setState({\n        places: [],\n        firstPlace: {},\n        firstPlaceLat: 39.74,\n        firstPlaceLng: -104.991531,\n        zoon: 10,\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n          this.getCurrentLocation();\n        },\n\n        onPlacesChanged: () => {\n          const places = refs.searchBox.getPlaces();\n          const firstPlace = places[0];\n          const firstPlaceLat = firstPlace.geometry.location.lat()\n          const firstPlaceLng = firstPlace.geometry.location.lng()\n          this.setState({\n            places, firstPlace, firstPlaceLat, firstPlaceLng\n          });\n        }\n      });\n\n    }\n  }),\n  withScriptjs\n)(props => (\n\n  <div data-standalone-searchbox=\"\">\n    <StandaloneSearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Find your destination\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`\n        }}\n      />\n    </StandaloneSearchBox>\n    <MyMapComponent\n      googleMapURL={\"https://maps.googleapis.com/maps/api/js?key=\"+process.env.REACT_APP_API_KEY+\"&libraries=places\"}\n      containerElement={\n        <div style={{ height: `400px`, width: `100%` }} />\n      }\n      mapElement={\n        <div style={{ height: `100%` }} />\n      }\n      loadingElement={\n        <div style={{ height: `100%` }} />\n      }\n      center={{ lat: props.firstPlaceLat, lng: props.firstPlaceLng }}\n    />\n  </div>\n\n));\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst containerStyles = {\n  width: '100%',\n};\n\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\" style={containerStyles}>\n        <div className=\"row\" style={{display: 'none'}}>\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <h2> Planit - The best way to plan your next adventure. </h2>\n            <p>\n              Plan a trip from a, b, c and decide how long you want to spend in each spot\n              to generate an itinerary. Planit will show you transportation, lodging and\n              possible points of interest in the areas of travel including an estimated price\n              breakdown. Select the desired options and finalize your itinerary and you’re on your way!\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            <PlacesWithStandaloneSearchBox/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapContainer\n"]},"metadata":{},"sourceType":"module"}