{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Home.js\";\nimport React from \"react\";\nimport './App.css';\nimport * as d3 from \"d3\";\n\nclass LoadAnimation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPaused: true\n    };\n    this.data = [];\n    this.colorPallet = ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'];\n    this.colorPallets = {\n      'sunset': ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'],\n      'blues': ['#7400B8', '#6930C3', '#5E60CE', '#5390D9', '#4EA8DE', '#48BFE3', '#56CFE1', '#64DFDF', '#72EFDD', '#80FFDB'],\n      'fire': ['#370617', '#6A040F', '#9D0208', '#D00000', '#DC2F02', '#E85D04', '#F48C06', '#FAA307', '#FFBA08'],\n      'sunrise': ['#F94144', '#F3722C', '#F8961E', '#F9C74F', '#90BE6D', '#43AA8B', '#577590']\n    };\n    this.squareDim = {};\n    this.numberOfDivistions = 30; // only for this.numberOfDivistions = 40;\n\n    this.patterns = {\n      'space_invader_40': {\n        'frames': [[657, 663, 698, 702, 737, 738, 739, 740, 741, 742, 743, 776, 777, 779, 780, 781, 783, 784, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 855, 857, 858, 859, 860, 861, 862, 863, 865, 895, 897, 903, 905, 938, 939, 941, 942], [657, 663, 695, 698, 702, 705, 735, 737, 738, 739, 740, 741, 742, 743, 745, 775, 776, 777, 779, 780, 781, 783, 784, 785, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 856, 857, 858, 859, 860, 861, 862, 863, 864, 897, 903, 936, 944]]\n      },\n      'space_invader_30': {\n        'frames': [[342, 348, 373, 377, 402, 403, 404, 405, 406, 407, 408, 431, 432, 434, 435, 436, 438, 439, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 490, 492, 493, 494, 495, 496, 497, 498, 500, 520, 522, 528, 530, 553, 554, 556, 557], [342, 348, 370, 373, 377, 380, 400, 402, 403, 404, 405, 406, 407, 408, 410, 430, 431, 432, 434, 435, 436, 438, 439, 440, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 491, 492, 493, 494, 495, 496, 497, 498, 499, 522, 528, 551, 559]]\n      }\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.passiveAnimation = this.passiveAnimation.bind(this);\n  }\n\n  componentDidMount() {\n    this.startAnimation();\n  }\n\n  generateDataPoints() {\n    this.data = [];\n    this.squareDim.width = this.svgWidth / this.numberOfDivistions;\n    this.squareDim.height = this.svgHeight / this.numberOfDivistions; // y axis\n\n    for (let iy = 0; iy < this.numberOfDivistions; iy++) {\n      // x axis\n      for (let ix = 0; ix < this.numberOfDivistions; ix++) {\n        let x = ix * this.squareDim.width;\n        let y = iy * this.squareDim.height; // random first position and ordered grid as second positoin\n\n        let square = {\n          x1: Math.floor(Math.random() * this.svgWidth),\n          y1: Math.floor(Math.random() * this.svgHeight),\n          x2: x,\n          y2: y\n        };\n        this.data.push(square);\n      }\n    }\n  }\n\n  mouseoverAnimation(i, isRipple) {\n    let random = Math.random();\n    let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n    let rect = d3.select(\"#rect\" + i);\n    rect.transition().duration(500).style(\"opacity\", random).attr(\"fill\", this.colorPallet[randomColorIdx]).attr(\"x\", this.data[i].x1).attr(\"y\", this.data[i].y1).transition().duration(1500).style(\"opacity\", 1).attr(\"x\", this.data[i].x2).attr(\"y\", this.data[i].y2); // create ripple effect\n\n    if (!isRipple) {\n      const radius = 1;\n      let neighbors = [];\n\n      for (let xIndex = -radius; xIndex <= radius; xIndex++) {\n        let dataIdx = +i + xIndex;\n\n        for (let yIndex = -radius; yIndex <= radius; yIndex++) {\n          dataIdx = dataIdx - yIndex * this.numberOfDivistions; // if in bounds\n\n          if (dataIdx >= 0 && dataIdx < this.data.length && neighbors.indexOf(dataIdx)) {\n            neighbors.push(dataIdx);\n          }\n        }\n      }\n\n      let isRipple = true;\n\n      for (let neighbor of neighbors) {\n        this.mouseoverAnimation(neighbor, isRipple); // setTimeout(() => {  this.mouseoverAnimation(neighbor, isRipple) }, 10);\n      }\n    }\n  }\n\n  mouseoutAnimation(i, isRipple) {\n    let random = Math.random();\n    let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n    let rect = d3.select(\"#rect\" + i);\n    rect.transition().duration(1000).style(\"opacity\", 1).attr(\"fill\", this.colorPallet[randomColorIdx]);\n  }\n\n  drawMosaic(pattern, frameIndex, onLoad) {\n    d3.selectAll(\".mosaic\").remove();\n    let frame = pattern.frames[frameIndex];\n    let svg = d3.select('#animationSVG');\n\n    for (let squareIdx of frame) {\n      let rect = this.data[squareIdx];\n\n      if (rect === undefined) {\n        return;\n      }\n\n      let random = Math.random(); // let rect = d3.select(\"#rect\"+squareIdx).style(\"opacity\", 1)\n      // rect.style(\"fill\", \"black\")\n      //     .style(\"opacity\", 0.5)\n\n      if (onLoad) {\n        // setTimeout(() => {\n        svg.append('rect').attr('class', 'mosaic').attr(\"x\", Math.floor(Math.random() * this.svgWidth)).attr(\"y\", Math.floor(Math.random() * this.svgHeight)).attr(\"width\", this.squareDim.width).attr(\"height\", this.squareDim.width).attr('fill', 'black').style(\"opacity\", 0).transition().duration(1000).attr(\"x\", rect.x2).attr(\"y\", rect.y2).style(\"opacity\", 1); // }, 100);\n      } else {\n        svg.append('rect').attr('class', 'mosaic').attr(\"x\", rect.x2).attr(\"y\", rect.y2).attr(\"width\", this.squareDim.width).attr(\"height\", this.squareDim.width).attr('fill', 'black');\n      }\n    }\n  }\n\n  startMosaicAnimation(pattern) {\n    let that = this;\n    let curIndex = 0;\n\n    function advancePatternFrame(pattern, that) {\n      if (curIndex >= pattern.frames.length) {\n        curIndex = 0;\n      }\n\n      that.drawMosaic(pattern, curIndex);\n      ++curIndex;\n    }\n\n    let intervalID = setInterval(function () {\n      advancePatternFrame(pattern, that);\n    }, 1000);\n  }\n\n  moveMosaic(pattern, frameIndex) {// let frame = pattern.frames[frameIndex];\n    // // d3.selectAll(\".mosaic\").remove();\n    // let svg = d3.select('#animationSVG');\n    // for(let squareIdx of frame) {\n    //     let rectData = this.data[squareIdx];\n    //     // the square indexes dont match for the frames duh\n    //     let tile = d3.select(\"#mosaic\"+squareIdx)\n    //     tile.attr(\"x\", rectData.x2)\n    //         .attr(\"y\", rectData.y2)\n    //     if(frameIndex) {\n    //         tile.style(\"opacity\", 0.5)\n    //     } else {\n    //         tile.style(\"opacity\", 1)\n    //     }\n    // }\n  }\n\n  passiveAnimation() {\n    let that = this;\n\n    for (let idx in this.data) {\n      let random = Math.random();\n      let rect = d3.select(\"#rect\" + idx);\n      rect.transition().delay(1000 * random).duration(1000).style(\"opacity\", 0.8).transition().duration(1000).style(\"opacity\", 1);\n    }\n  }\n\n  startAnimation() {\n    // set random color pallet\n    let colorPalletKeys = Object.keys(this.colorPallets);\n    let randomColorPallet = Math.floor(Math.random() * colorPalletKeys.length);\n    this.colorPallet = this.colorPallets[colorPalletKeys[randomColorPallet]]; // setup SVG and begin drawing rectangles\n\n    let svgDiv = document.getElementById(\"home-animation\");\n    this.svgWidth = 500;\n    this.svgHeight = 500;\n    let that = this; // create svg\n\n    let svg = d3.select(svgDiv).append(\"svg\").attr(\"id\", \"animationSVG\").attr(\"width\", this.svgWidth).attr(\"height\", this.svgHeight); // //Container for the gradients\n    // var defs = svg.append(\"defs\");\n    // //Filter for the outside glow\n    // var filter = defs.append(\"filter\")\n    //     .attr(\"id\",\"glow\");\n    // filter.append(\"feGaussianBlur\")\n    //     .attr(\"stdDeviation\",\"3.5\")\n    //     .attr(\"result\",\"coloredBlur\");\n    // var feMerge = filter.append(\"feMerge\");\n    // feMerge.append(\"feMergeNode\")\n    //     .attr(\"in\",\"coloredBlur\");\n    // feMerge.append(\"feMergeNode\")\n    //     .attr(\"in\",\"SourceGraphic\");\n\n    this.generateDataPoints(); // mosaic only when grid is size 40\n    // if(this.numberOfDivistions === 40) {\n\n    let pattern = this.patterns['space_invader_' + this.numberOfDivistions];\n    setTimeout(() => {\n      this.drawMosaic(pattern, 0, true);\n      this.startMosaicAnimation(pattern);\n    }, 200); // }\n\n    for (let idx in this.data) {\n      setTimeout(() => {\n        this.drawRectangle(svg, idx);\n      }, 10);\n    } // // start passive animation\n    // let that = this;\n    // setTimeout(() => {  setInterval(that.passiveAnimation, 2500); }, 10*that.data.length);\n\n  }\n\n  drawRectangle(svg, idx) {\n    let randomColor = Math.floor(Math.random() * this.colorPallet.length);\n    let rect = this.data[idx];\n    let that = this;\n    svg.append(\"rect\").attr(\"id\", \"rect\" + idx).attr(\"class\", \"animation-rect\").attr(\"x\", rect.x1).attr(\"y\", rect.y1).attr(\"width\", 1).attr(\"height\", 1).attr(\"fill\", this.colorPallet[randomColor]).text(idx).style(\"opacity\", 0).transition().duration(1500).attr(\"width\", this.squareDim.width).attr(\"height\", this.squareDim.height).style(\"opacity\", 1).attr(\"y\", rect.y2).attr(\"x\", rect.x2);\n\n    if (idx === this.data.length - 1) {\n      console.warn(\"YOOOOOO WHAAAAT\");\n\n      for (let i in this.data) {\n        d3.select(\"#rect\" + i).on(\"mouseover\", function () {\n          that.mouseoverAnimation(i);\n        }); // .on(\"mouseout\", function() { that.mouseoutAnimation(idx) })\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"home-animation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction Home(props) {\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(LoadAnimation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col-6 home-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, \"William Vennard\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"Web Developer & Mechanical Engineer\")), React.createElement(\"div\", {\n    className: \"contact-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, \"Contact Me\")));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Home.js"],"names":["React","d3","LoadAnimation","Component","constructor","props","state","isPaused","data","colorPallet","colorPallets","squareDim","numberOfDivistions","patterns","passiveAnimation","bind","componentDidMount","startAnimation","generateDataPoints","width","svgWidth","height","svgHeight","iy","ix","x","y","square","x1","Math","floor","random","y1","x2","y2","push","mouseoverAnimation","i","isRipple","randomColorIdx","length","rect","select","transition","duration","style","attr","radius","neighbors","xIndex","dataIdx","yIndex","indexOf","neighbor","mouseoutAnimation","drawMosaic","pattern","frameIndex","onLoad","selectAll","remove","frame","frames","svg","squareIdx","undefined","append","startMosaicAnimation","that","curIndex","advancePatternFrame","intervalID","setInterval","moveMosaic","idx","delay","colorPalletKeys","Object","keys","randomColorPallet","svgDiv","document","getElementById","setTimeout","drawRectangle","randomColor","text","console","warn","on","render","Home"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport './App.css';\nimport * as d3 from \"d3\";\n\nclass LoadAnimation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isPaused: true};\n        this.data = [];\n        this.colorPallet = ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'];\n        this.colorPallets = {\n            'sunset': ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'],\n            'blues': ['#7400B8', '#6930C3', '#5E60CE', '#5390D9', '#4EA8DE', '#48BFE3', '#56CFE1', '#64DFDF', '#72EFDD', '#80FFDB'],\n            'fire': ['#370617', '#6A040F', '#9D0208', '#D00000', '#DC2F02', '#E85D04', '#F48C06', '#FAA307', '#FFBA08'],\n            'sunrise': ['#F94144', '#F3722C', '#F8961E', '#F9C74F', '#90BE6D', '#43AA8B', '#577590']\n        }\n        this.squareDim = {};\n        this.numberOfDivistions = 30;\n        // only for this.numberOfDivistions = 40;\n        this.patterns = {\n            'space_invader_40': {\n                'frames':[\n                    [657, 663,\n                    698, 702,\n                    737, 738, 739, 740, 741, 742, 743,\n                    776, 777, 779, 780, 781, 783, 784,\n                    815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825,\n                    855, 857, 858, 859, 860, 861, 862, 863, 865,\n                    895, 897, 903, 905,\n                    938, 939, 941, 942],\n\n                    [657, 663,\n                    695, 698, 702, 705,\n                    735, 737, 738, 739, 740, 741, 742, 743, 745,\n                    775, 776, 777, 779, 780, 781, 783, 784, 785,\n                    815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825,\n                    856, 857, 858, 859, 860, 861, 862, 863, 864,\n                    897, 903,\n                    936, 944]\n                ]\n            },\n            'space_invader_30': {\n                'frames':[\n                    [342, 348,\n                    373, 377,\n                    402, 403, 404, 405, 406, 407, 408,\n                    431, 432, 434, 435, 436, 438, 439,\n                    460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470,\n                    490, 492, 493, 494, 495, 496, 497, 498, 500,\n                    520, 522, 528, 530,\n                    553, 554, 556, 557],\n\n                    [342, 348,\n                    370, 373, 377, 380,\n                    400, 402, 403, 404, 405, 406, 407, 408, 410,\n                    430, 431, 432, 434, 435, 436, 438, 439, 440,\n                    460, 461, 462, 463, 464,465, 466, 467, 468, 469, 470,\n                    491, 492, 493, 494, 495, 496, 497, 498, 499,\n                    522, 528,\n                    551, 559],\n                ]\n            }\n        }\n\n\n        // This binding is necessary to make `this` work in the callback\n        this.passiveAnimation = this.passiveAnimation.bind(this);\n    }\n\n    componentDidMount() {\n        this.startAnimation()\n    }\n\n    generateDataPoints() {\n        this.data = [];\n        this.squareDim.width = this.svgWidth/(this.numberOfDivistions);\n        this.squareDim.height = this.svgHeight/(this.numberOfDivistions);\n        // y axis\n        for (let iy = 0; iy < this.numberOfDivistions; iy++) {\n            // x axis\n            for (let ix = 0; ix < this.numberOfDivistions; ix++) {\n                let x = ix*this.squareDim.width;\n                let y = iy*this.squareDim.height;\n                // random first position and ordered grid as second positoin\n                let square = {\n                    x1: Math.floor(Math.random() * this.svgWidth),\n                    y1: Math.floor(Math.random() * this.svgHeight),\n                    x2: x,\n                    y2: y,\n                }\n                this.data.push(square)\n            }\n        }\n    }\n\n    mouseoverAnimation(i, isRipple) {\n        let random = Math.random();\n        let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = d3.select(\"#rect\" +i)\n        rect.transition()\n            .duration(500)\n            .style(\"opacity\", random)\n            .attr(\"fill\", this.colorPallet[randomColorIdx])\n            .attr(\"x\", this.data[i].x1)\n            .attr(\"y\", this.data[i].y1)\n            .transition()\n            .duration(1500)\n            .style(\"opacity\", 1)\n            .attr(\"x\", this.data[i].x2)\n            .attr(\"y\", this.data[i].y2)\n\n        // create ripple effect\n        if(!isRipple) {\n            const radius = 1;\n            let neighbors = [];\n            for(let xIndex = -radius; xIndex <= radius; xIndex++) {\n                let dataIdx = +i+xIndex;\n                for(let yIndex = -radius; yIndex <= radius; yIndex++) {\n                    dataIdx = dataIdx - (yIndex*this.numberOfDivistions)\n                    // if in bounds\n                    if(dataIdx >= 0 && dataIdx<this.data.length && neighbors.indexOf(dataIdx)) {\n                        neighbors.push(dataIdx)\n                    }\n                }\n            }\n            let isRipple = true;\n            for(let neighbor of neighbors) {\n                this.mouseoverAnimation(neighbor, isRipple)\n                // setTimeout(() => {  this.mouseoverAnimation(neighbor, isRipple) }, 10);\n            }\n        }\n    }\n\n    mouseoutAnimation(i, isRipple) {\n        let random = Math.random();\n        let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = d3.select(\"#rect\" +i)\n        rect.transition()\n            .duration(1000)\n            .style(\"opacity\", 1)\n            .attr(\"fill\", this.colorPallet[randomColorIdx])\n    }\n\n    drawMosaic(pattern, frameIndex, onLoad) {\n        d3.selectAll(\".mosaic\").remove();\n        let frame = pattern.frames[frameIndex];\n        let svg = d3.select('#animationSVG');\n        for(let squareIdx of frame) {\n            let rect = this.data[squareIdx];\n            if(rect === undefined) {return}\n            let random = Math.random();\n            // let rect = d3.select(\"#rect\"+squareIdx).style(\"opacity\", 1)\n            // rect.style(\"fill\", \"black\")\n            //     .style(\"opacity\", 0.5)\n            if(onLoad) {\n                // setTimeout(() => {\n                    svg.append('rect')\n                        .attr('class', 'mosaic')\n                        .attr(\"x\", Math.floor(Math.random() * this.svgWidth))\n                        .attr(\"y\", Math.floor(Math.random() * this.svgHeight))\n                        .attr(\"width\", this.squareDim.width)\n                        .attr(\"height\", this.squareDim.width)\n                        .attr('fill', 'black')\n                        .style(\"opacity\", 0)\n                        .transition()\n                        .duration(1000)\n                        .attr(\"x\", rect.x2)\n                        .attr(\"y\", rect.y2)\n                        .style(\"opacity\", 1)\n                // }, 100);\n            } else {\n                svg.append('rect')\n                    .attr('class', 'mosaic')\n                    .attr(\"x\", rect.x2)\n                    .attr(\"y\", rect.y2)\n                    .attr(\"width\", this.squareDim.width)\n                    .attr(\"height\", this.squareDim.width)\n                    .attr('fill', 'black')\n\n            }\n\n        }\n    }\n\n    startMosaicAnimation(pattern) {\n        let that = this;\n        let curIndex = 0;\n        function advancePatternFrame(pattern, that) {\n            if (curIndex >= pattern.frames.length) {\n                curIndex = 0;\n            }\n            that.drawMosaic(pattern, curIndex)\n            ++curIndex;\n        }\n        let intervalID = setInterval(function(){advancePatternFrame(pattern, that)}, 1000);\n    }\n\n    moveMosaic(pattern, frameIndex) {\n        // let frame = pattern.frames[frameIndex];\n        // // d3.selectAll(\".mosaic\").remove();\n        // let svg = d3.select('#animationSVG');\n        // for(let squareIdx of frame) {\n        //     let rectData = this.data[squareIdx];\n\n        //     // the square indexes dont match for the frames duh\n        //     let tile = d3.select(\"#mosaic\"+squareIdx)\n\n        //     tile.attr(\"x\", rectData.x2)\n        //         .attr(\"y\", rectData.y2)\n        //     if(frameIndex) {\n        //         tile.style(\"opacity\", 0.5)\n        //     } else {\n        //         tile.style(\"opacity\", 1)\n        //     }\n        // }\n    }\n\n    passiveAnimation() {\n        let that = this;\n        for(let idx in this.data) {\n            let random = Math.random();\n            let rect = d3.select(\"#rect\"+idx)\n            rect.transition()\n                .delay(1000*random)\n                .duration(1000)\n                .style(\"opacity\", 0.8)\n                .transition()\n                .duration(1000)\n                .style(\"opacity\", 1)\n        }\n    }\n\n    startAnimation() {\n        // set random color pallet\n        let colorPalletKeys = Object.keys(this.colorPallets)\n        let randomColorPallet = Math.floor(Math.random() * colorPalletKeys.length);\n        this.colorPallet = this.colorPallets[colorPalletKeys[randomColorPallet]];\n        // setup SVG and begin drawing rectangles\n        let svgDiv = document.getElementById(\"home-animation\");\n        this.svgWidth = 500;\n        this.svgHeight = 500;\n        let that = this;\n        // create svg\n        let svg = d3.select(svgDiv).append(\"svg\")\n            .attr(\"id\", \"animationSVG\")\n            .attr(\"width\", this.svgWidth)\n            .attr(\"height\", this.svgHeight)\n\n        // //Container for the gradients\n        // var defs = svg.append(\"defs\");\n\n        // //Filter for the outside glow\n        // var filter = defs.append(\"filter\")\n        //     .attr(\"id\",\"glow\");\n        // filter.append(\"feGaussianBlur\")\n        //     .attr(\"stdDeviation\",\"3.5\")\n        //     .attr(\"result\",\"coloredBlur\");\n        // var feMerge = filter.append(\"feMerge\");\n        // feMerge.append(\"feMergeNode\")\n        //     .attr(\"in\",\"coloredBlur\");\n        // feMerge.append(\"feMergeNode\")\n        //     .attr(\"in\",\"SourceGraphic\");\n\n\n\n\n        this.generateDataPoints();\n        // mosaic only when grid is size 40\n        // if(this.numberOfDivistions === 40) {\n            let pattern = this.patterns['space_invader_' + this.numberOfDivistions];\n            setTimeout(() => {\n                this.drawMosaic(pattern, 0, true);\n                this.startMosaicAnimation(pattern)\n             }, 200);\n        // }\n\n\n\n        for(let idx in this.data) {\n            setTimeout(() => {  this.drawRectangle(svg, idx) }, 10);\n        }\n\n\n        // // start passive animation\n        // let that = this;\n        // setTimeout(() => {  setInterval(that.passiveAnimation, 2500); }, 10*that.data.length);\n    }\n\n    drawRectangle(svg, idx) {\n        let randomColor = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = this.data[idx];\n        let that = this;\n\n        svg.append(\"rect\")\n            .attr(\"id\", \"rect\" + idx)\n            .attr(\"class\", \"animation-rect\")\n            .attr(\"x\", rect.x1)\n            .attr(\"y\", rect.y1)\n            .attr(\"width\", 1)\n            .attr(\"height\", 1)\n            .attr(\"fill\", this.colorPallet[randomColor])\n            .text(idx)\n            .style(\"opacity\", 0)\n            .transition()\n            .duration(1500)\n            .attr(\"width\", this.squareDim.width)\n            .attr(\"height\", this.squareDim.height)\n            .style(\"opacity\", 1)\n            .attr(\"y\", rect.y2)\n            .attr(\"x\", rect.x2)\n\n        if(idx === this.data.length-1) {\n            console.warn(\"YOOOOOO WHAAAAT\")\n            for(let i in this.data) {\n\n                d3.select(\"#rect\"+i)\n                    .on(\"mouseover\", function() { that.mouseoverAnimation(i) })\n                    // .on(\"mouseout\", function() { that.mouseoutAnimation(idx) })\n            }\n\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div id=\"home-animation\"></div>\n        );\n    }\n}\n\n\nfunction Home(props) {\n  return (\n  \t<div className=\"container-fluid\">\n        <LoadAnimation/>\n\t    <div className=\"col-6 home-section\">\n\t      <h1>William Vennard</h1>\n\t      <h2>Web Developer & Mechanical Engineer</h2>\n\t    </div>\n\t    <div className=\"contact-btn\">\n\t    \t<button className=\"btn btn-outline-light\">Contact Me</button>\n\t    </div>\n    </div>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}