{"ast":null,"code":"import _defineProperty from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/williamvennard/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import ReactDOM from\"react-dom\";import{withGoogleMap,GoogleMap,withScriptjs,InfoWindow,Marker}from\"react-google-maps\";import Autocomplete from\"react-google-autocomplete\";import Geocode from\"react-geocode\";// import SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nGeocode.setApiKey(process.env.REACT_APP_API_KEY);Geocode.enableDebug();var Map=/*#__PURE__*/function(_React$Component){_inherits(Map,_React$Component);function Map(props){var _this;_classCallCheck(this,Map);_this=_possibleConstructorReturn(this,_getPrototypeOf(Map).call(this,props));_this.getCity=function(addressArray){console.warn(\"getCity: addressArray\",addressArray);var city=\"\";for(var i=0;i<addressArray.length;i++){if(addressArray[i].types[0]&&\"administrative_area_level_2\"===addressArray[i].types[0]){city=addressArray[i].long_name;return city;}}};_this.getArea=function(addressArray){var area=\"\";for(var i=0;i<addressArray.length;i++){if(addressArray[i].types[0]){for(var j=0;j<addressArray[i].types.length;j++){if(\"sublocality_level_1\"===addressArray[i].types[j]||\"locality\"===addressArray[i].types[j]){area=addressArray[i].long_name;return area;}}}}};_this.getState=function(addressArray){var state=\"\";for(var i=0;i<addressArray.length;i++){for(var _i=0;_i<addressArray.length;_i++){if(addressArray[_i].types[0]&&\"administrative_area_level_1\"===addressArray[_i].types[0]){state=addressArray[_i].long_name;return state;}}}};_this.onChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.onInfoWindowClose=function(event){console.warn(\"Infow window has been closed!!!\",event);};_this.onPlaceSelected=function(place){console.warn(\"place =\",place);var address=place.formatted_address,addressArray=place.address_components,city=_this.getCity(addressArray),area=_this.getArea(addressArray),state=_this.getState(addressArray),latValue=place.geometry.location.lat(),lngValue=place.geometry.location.lng();// Set these values in the state.\n_this.setState({address:address?address:\"\",area:area?area:\"\",city:city?city:\"\",state:state?state:\"\",markerPosition:{lat:latValue,lng:lngValue},mapPosition:{lat:latValue,lng:lngValue}});};_this.onMarkerDragEnd=function(event){console.log(\"event\",event);var newLat=event.latLng.lat(),newLng=event.latLng.lng(),addressArray=[];Geocode.fromLatLng(newLat,newLng).then(function(response){var address=response.results[0].formatted_address,addressArray=response.results[0].address_components,city=_this.getCity(addressArray),area=_this.getArea(addressArray),state=_this.getState(addressArray);_this.setState({address:address?address:\"\",area:area?area:\"\",city:city?city:\"\",state:state?state:\"\"});},function(error){console.error(error);});};_this.state={address:\"\",city:\"\",area:\"\",state:\"\",mapPosition:{lat:_this.props.center.lat,lng:_this.props.center.lng},markerPosition:{lat:_this.props.center.lat,lng:_this.props.center.lng}};return _this;}/**\n   * Get the current address from the default map position and set those values in the state\n   */_createClass(Map,[{key:\"componentDidMount\",value:function componentDidMount(){// Try HTML5 geolocation.\nif(navigator.geolocation){var that=this;navigator.geolocation.getCurrentPosition(function(position){that.state.mapPosition.lat=position.coords.latitude;that.state.mapPosition.lng=position.coords.longitude;that.next();},function(){console.warn(\"getCurrentPosition: Error!\");});}else{// Browser doesn't support Geolocation\nconsole.warn(\"Browser doesn't support Geolocation\");}}},{key:\"next\",value:function next(){var _this2=this;Geocode.fromLatLng(this.state.mapPosition.lat,this.state.mapPosition.lng).then(function(response){var address=response.results[0].formatted_address,addressArray=response.results[0].address_components,city=_this2.getCity(addressArray),area=_this2.getArea(addressArray),state=_this2.getState(addressArray);console.log(\"city\",city,area,state);_this2.setState({address:address?address:\"\",area:area?area:\"\",city:city?city:\"\",state:state?state:\"\"});},function(error){console.error(error);});}/**\n   * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n   *\n   * @param nextProps\n   * @param nextState\n   * @return {boolean}\n   */},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.state.markerPosition.lat!==this.props.center.lat||this.state.address!==nextState.address||this.state.city!==nextState.city||this.state.area!==nextState.area||this.state.state!==nextState.state){return true;}else if(this.props.center.lat===nextProps.center.lat){return false;}}/**\n   * Get the city and set the city input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */},{key:\"render\",value:function render(){var _this3=this;var AsyncMap=withScriptjs(withGoogleMap(function(props){return React.createElement(GoogleMap,{google:_this3.props.google,defaultZoom:_this3.props.zoom,defaultCenter:{lat:_this3.state.mapPosition.lat,lng:_this3.state.mapPosition.lng}},React.createElement(Marker,{google:_this3.props.google,name:\"Dolores park\",draggable:true,onDragEnd:_this3.onMarkerDragEnd,position:{lat:_this3.state.markerPosition.lat,lng:_this3.state.markerPosition.lng}}),React.createElement(Marker,null),React.createElement(InfoWindow,{onClose:_this3.onInfoWindowClose,position:{lat:_this3.state.markerPosition.lat+0.0018,lng:_this3.state.markerPosition.lng}},React.createElement(\"div\",null,React.createElement(\"span\",{style:{padding:0,margin:0,color:\"black\"}},_this3.state.address))));}));var map;if(this.props.center.lat!==undefined){map=React.createElement(\"div\",{className:\"col\"},React.createElement(AsyncMap,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=\"+process.env.REACT_APP_API_KEY+\"&libraries=places\",loadingElement:React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:React.createElement(\"div\",{style:{height:this.props.height,width:\"100%\"}}),mapElement:React.createElement(\"div\",{style:{height:\"100%\"}})}),React.createElement(\"div\",{style:{marginTop:\"50px\",marginBottom:\"50px\"}},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"\"},\"City\"),React.createElement(\"input\",{type:\"text\",name:\"city\",className:\"form-control\",onChange:this.onChange,readOnly:\"readOnly\",value:this.state.city})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"\"},\"Area\"),React.createElement(\"input\",{type:\"text\",name:\"area\",className:\"form-control\",onChange:this.onChange,readOnly:\"readOnly\",value:this.state.area})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"\"},\"State\"),React.createElement(\"input\",{type:\"text\",name:\"state\",className:\"form-control\",onChange:this.onChange,readOnly:\"readOnly\",value:this.state.state})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"\"},\"Address\"),React.createElement(\"input\",{type:\"text\",name:\"address\",className:\"form-control\",onChange:this.onChange,readOnly:\"readOnly\",value:this.state.address}))));}else{map=React.createElement(\"div\",{style:{height:this.props.height}});}return map;}}]);return Map;}(React.Component);export default Map;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Map.js"],"names":["React","Component","ReactDOM","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Autocomplete","Geocode","setApiKey","process","env","REACT_APP_API_KEY","enableDebug","Map","props","getCity","addressArray","console","warn","city","i","length","types","long_name","getArea","area","j","getState","state","onChange","event","setState","target","name","value","onInfoWindowClose","onPlaceSelected","place","address","formatted_address","address_components","latValue","geometry","location","lat","lngValue","lng","markerPosition","mapPosition","onMarkerDragEnd","log","newLat","latLng","newLng","fromLatLng","then","response","results","error","center","navigator","geolocation","that","getCurrentPosition","position","coords","latitude","longitude","next","nextProps","nextState","AsyncMap","google","zoom","padding","margin","color","map","undefined","height","width","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Geocode from \"react-geocode\";\n// import SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nGeocode.setApiKey(process.env.REACT_APP_API_KEY);\nGeocode.enableDebug();\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n      city: \"\",\n      area: \"\",\n      state: \"\",\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng,\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng,\n      },\n    };\n  }\n  /**\n   * Get the current address from the default map position and set those values in the state\n   */\n  componentDidMount() {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      let that = this;\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          that.state.mapPosition.lat = position.coords.latitude;\n          that.state.mapPosition.lng = position.coords.longitude;\n          that.next();\n        },\n        function () {\n          console.warn(\"getCurrentPosition: Error!\");\n        }\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      console.warn(\"Browser doesn't support Geolocation\");\n    }\n  }\n\n  next() {\n    Geocode.fromLatLng(\n      this.state.mapPosition.lat,\n      this.state.mapPosition.lng\n    ).then(\n      (response) => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          area = this.getArea(addressArray),\n          state = this.getState(addressArray);\n        console.log(\"city\", city, area, state);\n\n        this.setState({\n          address: address ? address : \"\",\n          area: area ? area : \"\",\n          city: city ? city : \"\",\n          state: state ? state : \"\",\n        });\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  /**\n   * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n   *\n   * @param nextProps\n   * @param nextState\n   * @return {boolean}\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.state.markerPosition.lat !== this.props.center.lat ||\n      this.state.address !== nextState.address ||\n      this.state.city !== nextState.city ||\n      this.state.area !== nextState.area ||\n      this.state.state !== nextState.state\n    ) {\n      return true;\n    } else if (this.props.center.lat === nextProps.center.lat) {\n      return false;\n    }\n  }\n  /**\n   * Get the city and set the city input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getCity = (addressArray) => {\n    console.warn(\"getCity: addressArray\", addressArray);\n    let city = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      if (\n        addressArray[i].types[0] &&\n        \"administrative_area_level_2\" === addressArray[i].types[0]\n      ) {\n        city = addressArray[i].long_name;\n        return city;\n      }\n    }\n  };\n  /**\n   * Get the area and set the area input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getArea = (addressArray) => {\n    let area = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      if (addressArray[i].types[0]) {\n        for (let j = 0; j < addressArray[i].types.length; j++) {\n          if (\n            \"sublocality_level_1\" === addressArray[i].types[j] ||\n            \"locality\" === addressArray[i].types[j]\n          ) {\n            area = addressArray[i].long_name;\n            return area;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Get the address and set the address input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getState = (addressArray) => {\n    let state = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      for (let i = 0; i < addressArray.length; i++) {\n        if (\n          addressArray[i].types[0] &&\n          \"administrative_area_level_1\" === addressArray[i].types[0]\n        ) {\n          state = addressArray[i].long_name;\n          return state;\n        }\n      }\n    }\n  };\n  /**\n   * And function for city,state and address input\n   * @param event\n   */\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  /**\n   * This Event triggers when the marker window is closed\n   *\n   * @param event\n   */\n  onInfoWindowClose = (event) => {\n    console.warn(\"Infow window has been closed!!!\", event);\n  };\n  /**\n   * When the user types an address in the search box\n   * @param place\n   */\n  onPlaceSelected = (place) => {\n    console.warn(\"place =\", place);\n    const address = place.formatted_address,\n      addressArray = place.address_components,\n      city = this.getCity(addressArray),\n      area = this.getArea(addressArray),\n      state = this.getState(addressArray),\n      latValue = place.geometry.location.lat(),\n      lngValue = place.geometry.location.lng();\n    // Set these values in the state.\n    this.setState({\n      address: address ? address : \"\",\n      area: area ? area : \"\",\n      city: city ? city : \"\",\n      state: state ? state : \"\",\n      markerPosition: {\n        lat: latValue,\n        lng: lngValue,\n      },\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue,\n      },\n    });\n  };\n  /**\n   * When the marker is dragged you get the lat and long using the functions available from event object.\n   * Use geocode to get the address, city, area and state from the lat and lng positions.\n   * And then set those values in the state.\n   *\n   * @param event\n   */\n  onMarkerDragEnd = (event) => {\n    console.log(\"event\", event);\n    let newLat = event.latLng.lat(),\n      newLng = event.latLng.lng(),\n      addressArray = [];\n    Geocode.fromLatLng(newLat, newLng).then(\n      (response) => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          area = this.getArea(addressArray),\n          state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : \"\",\n          area: area ? area : \"\",\n          city: city ? city : \"\",\n          state: state ? state : \"\",\n        });\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap((props) => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          defaultCenter={{\n            lat: this.state.mapPosition.lat,\n            lng: this.state.mapPosition.lng,\n          }}\n        >\n          <Marker\n            google={this.props.google}\n            name={\"Dolores park\"}\n            draggable={true}\n            onDragEnd={this.onMarkerDragEnd}\n            position={{\n              lat: this.state.markerPosition.lat,\n              lng: this.state.markerPosition.lng,\n            }}\n          />\n          <Marker />\n          <InfoWindow\n            onClose={this.onInfoWindowClose}\n            position={{\n              lat: this.state.markerPosition.lat + 0.0018,\n              lng: this.state.markerPosition.lng,\n            }}\n          >\n            <div>\n              <span style={{ padding: 0, margin: 0, color: \"black\" }}>\n                {this.state.address}\n              </span>\n            </div>\n          </InfoWindow>\n        </GoogleMap>\n      ))\n    );\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <div className=\"col\">\n          <AsyncMap\n            googleMapURL={\n              \"https://maps.googleapis.com/maps/api/js?key=\" +\n              process.env.REACT_APP_API_KEY +\n              \"&libraries=places\"\n            }\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={\n              <div style={{ height: this.props.height, width: `100%` }} />\n            }\n            mapElement={<div style={{ height: `100%` }} />}\n          />\n          <div style={{ marginTop: `50px`, marginBottom: `50px` }}>\n            <div className=\"form-group\">\n              <label htmlFor=\"\">City</label>\n              <input\n                type=\"text\"\n                name=\"city\"\n                className=\"form-control\"\n                onChange={this.onChange}\n                readOnly=\"readOnly\"\n                value={this.state.city}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"\">Area</label>\n              <input\n                type=\"text\"\n                name=\"area\"\n                className=\"form-control\"\n                onChange={this.onChange}\n                readOnly=\"readOnly\"\n                value={this.state.area}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"\">State</label>\n              <input\n                type=\"text\"\n                name=\"state\"\n                className=\"form-control\"\n                onChange={this.onChange}\n                readOnly=\"readOnly\"\n                value={this.state.state}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"\">Address</label>\n              <input\n                type=\"text\"\n                name=\"address\"\n                className=\"form-control\"\n                onChange={this.onChange}\n                readOnly=\"readOnly\"\n                value={this.state.address}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    return map;\n  }\n}\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}