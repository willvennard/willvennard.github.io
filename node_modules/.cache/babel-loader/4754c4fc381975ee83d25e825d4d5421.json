{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Alert.js\";\nimport React from \"react\";\nimport AlertMessageTest from \"./AlertMessage.js\";\n\nclass AlertMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 120,\n      minutes: this.counter / 60,\n      seconds: this.counter % 60\n    };\n    this.handleClick = this.clickThis.bind(this);\n  }\n\n  componentDidMount() {\n    // start countdown\n    this.interval = setInterval(() => {\n      this.countDown();\n    }, 1000);\n  }\n\n  countDown() {\n    console.log(\"countDown: this.state.counter =\", this.state.counter); // this.state.minutes =\n\n    if (this.state.counter > 0) {\n      this.state.counter--;\n      this.setState({\n        counter: this.state.counter\n      });\n    } else {\n      clearInterval(this.interval);\n    }\n  }\n\n  clickThis() {\n    console.warn(\"YOOO THIS WAS CLICKED!\", this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Self-Destruct In : \", this.state.counter), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.minutes, \" : \", this.state.seconds), React.createElement(AlertMessageTest, {\n      message: \"hello world\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clickThis,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Hello Alert!\"));\n  }\n\n}\n\nexport default AlertMessage;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Alert.js"],"names":["React","AlertMessageTest","AlertMessage","Component","constructor","props","state","counter","minutes","seconds","handleClick","clickThis","bind","componentDidMount","interval","setInterval","countDown","console","log","setState","clearInterval","warn","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;;AACA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,GADE;AAEXC,MAAAA,OAAO,EAAE,KAAKD,OAAL,GAAe,EAFb;AAGXE,MAAAA,OAAO,EAAE,KAAKF,OAAL,GAAe;AAHb,KAAb;AAKA,SAAKG,WAAL,GAAmB,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,WAAKC,SAAL;AACD,KAF0B,EAExB,IAFwB,CAA3B;AAGD;;AAEDA,EAAAA,SAAS,GAAG;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,KAAKZ,KAAL,CAAWC,OAA1D,EADU,CAEV;;AACA,QAAI,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAAzB,EAA4B;AAC1B,WAAKD,KAAL,CAAWC,OAAX;AACA,WAAKY,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AAAtB,OAAd;AACD,KAHD,MAGO;AACLa,MAAAA,aAAa,CAAC,KAAKN,QAAN,CAAb;AACD;AACF;;AAEDH,EAAAA,SAAS,GAAG;AACVM,IAAAA,OAAO,CAACI,IAAR,CAAa,wBAAb,EAAuC,IAAvC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAuB,KAAKhB,KAAL,CAAWC,OAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,OADd,SAC0B,KAAKF,KAAL,CAAWG,OADrC,CAFF,EAKE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOE;AAAQ,MAAA,OAAO,EAAE,KAAKE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF;AAWD;;AA7CwC;;AA+C3C,eAAeT,YAAf","sourcesContent":["import React from \"react\";\nimport AlertMessageTest from \"./AlertMessage.js\";\nclass AlertMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 120,\n      minutes: this.counter / 60,\n      seconds: this.counter % 60,\n    };\n    this.handleClick = this.clickThis.bind(this);\n  }\n\n  componentDidMount() {\n    // start countdown\n    this.interval = setInterval(() => {\n      this.countDown();\n    }, 1000);\n  }\n\n  countDown() {\n    console.log(\"countDown: this.state.counter =\", this.state.counter);\n    // this.state.minutes =\n    if (this.state.counter > 0) {\n      this.state.counter--;\n      this.setState({ counter: this.state.counter });\n    } else {\n      clearInterval(this.interval);\n    }\n  }\n\n  clickThis() {\n    console.warn(\"YOOO THIS WAS CLICKED!\", this);\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Self-Destruct In : {this.state.counter}</p>\n        <p>\n          {this.state.minutes} : {this.state.seconds}\n        </p>\n        <AlertMessageTest message=\"hello world\" />\n\n        <button onClick={this.clickThis}>Hello Alert!</button>\n      </div>\n    );\n  }\n}\nexport default AlertMessage;\n"]},"metadata":{},"sourceType":"module"}