{"ast":null,"code":"var _jsxFileName = \"/Users/williamvennard/my-app/src/Home.js\";\nimport React from \"react\";\nimport './App.css';\nimport * as d3 from \"d3\";\n\nclass LoadAnimation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPaused: true\n    };\n    this.data = [];\n    this.colorPallet = ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'];\n    this.colorPallets = {\n      'sunset': ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'],\n      'blues': ['#7400B8', '#6930C3', '#5E60CE', '#5390D9', '#4EA8DE', '#48BFE3', '#56CFE1', '#64DFDF', '#72EFDD', '#80FFDB'],\n      'fire': ['#03071E', '#370617', '#6A040F', '#9D0208', '#D00000', '#DC2F02', '#E85D04', '#F48C06', '#FAA307', '#FFBA08'],\n      'sunrise': ['#F94144', '#F3722C', '#F8961E', '#F9C74F', '#90BE6D', '#43AA8B', '#577590']\n    };\n    this.squareDim = {};\n    this.numberOfDivistions = 40; // This binding is necessary to make `this` work in the callback\n\n    this.passiveAnimation = this.passiveAnimation.bind(this);\n  }\n\n  componentDidMount() {\n    this.startAnimation();\n  }\n\n  generateDataPoints() {\n    this.data = [];\n    this.squareDim.width = this.svgWidth / this.numberOfDivistions;\n    this.squareDim.height = this.svgHeight / this.numberOfDivistions; // y axis\n\n    for (let iy = 0; iy < this.numberOfDivistions; iy++) {\n      // x axis\n      for (let ix = 0; ix < this.numberOfDivistions; ix++) {\n        let x = ix * this.squareDim.width;\n        let y = iy * this.squareDim.height;\n        let square = {\n          x1: Math.floor(Math.random() * this.svgWidth),\n          y1: Math.floor(Math.random() * this.svgHeight),\n          x2: x,\n          y2: y\n        };\n        this.data.push(square);\n      }\n    }\n\n    console.warn(\"DEBUG DEBUG generateDataPoints: this.data = \", this.data);\n  }\n\n  mouseoverAnimation(i, isRipple) {\n    let random = Math.random();\n    let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n    let rect = d3.select(\"#rect\" + i);\n    rect.transition().duration(500).style(\"opacity\", random).attr(\"fill\", this.colorPallet[randomColorIdx]).attr(\"x\", this.data[i].x1).attr(\"y\", this.data[i].y1).transition().duration(1500).style(\"opacity\", 1).attr(\"x\", this.data[i].x2).attr(\"y\", this.data[i].y2); // create ripple effect\n\n    if (!isRipple) {\n      const radius = 1;\n      let neighbors = [];\n\n      for (let xIndex = -radius; xIndex <= radius; xIndex++) {\n        let dataIdx = +i + xIndex;\n\n        for (let yIndex = -radius; yIndex <= radius; yIndex++) {\n          dataIdx = dataIdx - yIndex * this.numberOfDivistions; // if in bounds\n\n          if (dataIdx >= 0 && dataIdx < this.data.length && neighbors.indexOf(dataIdx)) {\n            neighbors.push(dataIdx);\n          }\n        }\n      }\n\n      let isRipple = true;\n\n      for (let neighbor of neighbors) {\n        this.mouseoverAnimation(neighbor, isRipple); // setTimeout(() => {  this.mouseoverAnimation(neighbor, isRipple) }, 10);\n      }\n    }\n  }\n\n  mouseoutAnimation(i, isRipple) {\n    let random = Math.random();\n    let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n    let rect = d3.select(\"#rect\" + i);\n    rect.transition().duration(1000).style(\"opacity\", 1).attr(\"fill\", this.colorPallet[randomColorIdx]);\n  }\n\n  drawMosaic(pattern) {\n    pattern = [657, 663, 698, 702, 737, 738, 739, 740, 741, 742, 743, 776, 777, 779, 780, 781, 783, 784, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 855, 857, 858, 859, 860, 861, 862, 863, 865, 895, 897, 903, 905, 938, 939, 941, 942];\n\n    for (let squareIdx of pattern) {\n      setTimeout(() => {\n        // let rect = this.data[squareIdx];\n        let svg = d3.select('#animationSVG');\n        let random = Math.random();\n        let rect = d3.select(\"#rect\" + squareIdx).style(\"opacity\", 1);\n        rect.transition().delay(1000 * random).duration(1000).style(\"opacity\", 0.2); // svg.append('rect')\n        //     .attr('class', 'mosaic')\n        //     .attr(\"x\", rect.x2)\n        //     .attr(\"y\", rect.y2)\n        //     .attr(\"width\", this.squareDim.width)\n        //     .attr(\"height\", this.squareDim.width)\n        //     .attr('fill', 'black')\n      }, 50);\n    }\n\n    let that = this;\n    that.row = 0; // this.moveMosaicInterval = setInterval(function(){\n    //     that.moveMosaic(pattern, that.row)\n    // }, 100);\n  }\n\n  moveMosaic(pattern, row) {\n    this.row++;\n\n    if (this.row > this.numberOfDivistions) {\n      // this.moveMosaicInterval.inve\n      return;\n    }\n\n    console.warn(\"moveMosaic! pattern, row =\", pattern);\n    console.warn(\"moveMosaic! row =\", this.row);\n    let randomColor = Math.floor(Math.random() * this.colorPallet.length);\n    d3.selectAll('.mosaic').remove();\n\n    for (let squareIdx of pattern) {\n      let adjustedIdx = squareIdx + 40 * this.row;\n      setTimeout(() => {\n        let rect = this.data[adjustedIdx];\n        let svg = d3.select('#animationSVG');\n        svg.append('rect').attr('class', 'mosaic').attr(\"x\", rect.x2).attr(\"y\", rect.y2).attr(\"width\", this.squareDim.width).attr(\"height\", this.squareDim.width).attr('fill', 'black');\n      }, 50);\n    }\n  }\n\n  passiveAnimation() {\n    let that = this;\n\n    for (let idx in this.data) {\n      let random = Math.random();\n      let rect = d3.select(\"#rect\" + idx);\n      rect.transition().delay(1000 * random).duration(1000).style(\"opacity\", 0.8).transition().duration(1000).style(\"opacity\", 1);\n    }\n  }\n\n  startAnimation() {\n    // set random color pallet\n    let colorPalletKeys = Object.keys(this.colorPallets);\n    let randomColorPallet = Math.floor(Math.random() * colorPalletKeys.length);\n    this.colorPallet = this.colorPallets[colorPalletKeys[randomColorPallet]];\n    console.warn(\"DEBUG colorPalletKeys =\", colorPalletKeys);\n    console.warn(\"DEBUG this.colorPallet =\", this.colorPallet); // setup SVG and begin drawing rectangles\n\n    let svgDiv = document.getElementById(\"home-animation\");\n    this.svgWidth = 500;\n    this.svgHeight = 500;\n    let that = this;\n    let svg = d3.select(svgDiv).append(\"svg\").attr(\"id\", \"animationSVG\").attr(\"width\", this.svgWidth).attr(\"height\", this.svgHeight).on(\"click\", function () {\n      that.drawMosaic();\n    });\n    this.generateDataPoints();\n\n    for (let idx in this.data) {\n      setTimeout(() => {\n        this.drawRectangle(svg, idx);\n      }, 10);\n    } // // start passive animation\n    // let that = this;\n    // setTimeout(() => {  setInterval(that.passiveAnimation, 2500); }, 10*that.data.length);\n\n  }\n\n  drawRectangle(svg, idx) {\n    let randomColor = Math.floor(Math.random() * this.colorPallet.length);\n    let rect = this.data[idx];\n    let that = this;\n    svg.append(\"rect\").attr(\"id\", \"rect\" + idx).attr(\"class\", \"animation-rect\").attr(\"x\", rect.x1).attr(\"y\", rect.y1).attr(\"width\", 1).attr(\"height\", 1).attr(\"fill\", this.colorPallet[randomColor]).text(idx).style(\"opacity\", 0) // .on(\"mouseover\", function() { that.mouseoverAnimation(idx) })\n    // .on(\"mouseout\", function() { that.mouseoutAnimation(idx) })\n    .transition().duration(1500).attr(\"width\", this.squareDim.width).attr(\"height\", this.squareDim.height).style(\"opacity\", 1).attr(\"y\", rect.y2).attr(\"x\", rect.x2);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"home-animation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction Home(props) {\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(LoadAnimation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col-6 home-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"William Vennard\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Web Developer & Mechanical Engineer\")), React.createElement(\"div\", {\n    className: \"contact-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Contact Me\")));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/williamvennard/my-app/src/Home.js"],"names":["React","d3","LoadAnimation","Component","constructor","props","state","isPaused","data","colorPallet","colorPallets","squareDim","numberOfDivistions","passiveAnimation","bind","componentDidMount","startAnimation","generateDataPoints","width","svgWidth","height","svgHeight","iy","ix","x","y","square","x1","Math","floor","random","y1","x2","y2","push","console","warn","mouseoverAnimation","i","isRipple","randomColorIdx","length","rect","select","transition","duration","style","attr","radius","neighbors","xIndex","dataIdx","yIndex","indexOf","neighbor","mouseoutAnimation","drawMosaic","pattern","squareIdx","setTimeout","svg","delay","that","row","moveMosaic","randomColor","selectAll","remove","adjustedIdx","append","idx","colorPalletKeys","Object","keys","randomColorPallet","svgDiv","document","getElementById","on","drawRectangle","text","render","Home"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport './App.css';\nimport * as d3 from \"d3\";\n\nclass LoadAnimation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isPaused: true};\n        this.data = [];\n        this.colorPallet = ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'];\n        this.colorPallets = {\n            'sunset': ['#264653', '#2A9D8F', '#E9C46A', '#F4A261', '#E76F51'],\n            'blues': ['#7400B8', '#6930C3', '#5E60CE', '#5390D9', '#4EA8DE', '#48BFE3', '#56CFE1', '#64DFDF', '#72EFDD', '#80FFDB'],\n            'fire': ['#03071E', '#370617', '#6A040F', '#9D0208', '#D00000', '#DC2F02', '#E85D04', '#F48C06', '#FAA307', '#FFBA08'],\n            'sunrise': ['#F94144', '#F3722C', '#F8961E', '#F9C74F', '#90BE6D', '#43AA8B', '#577590']\n        }\n        this.squareDim = {};\n        this.numberOfDivistions = 40;\n        // This binding is necessary to make `this` work in the callback\n        this.passiveAnimation = this.passiveAnimation.bind(this);\n    }\n\n    componentDidMount() {\n        this.startAnimation()\n    }\n\n    generateDataPoints() {\n        this.data = [];\n        this.squareDim.width = this.svgWidth/(this.numberOfDivistions);\n        this.squareDim.height = this.svgHeight/(this.numberOfDivistions);\n        // y axis\n        for (let iy = 0; iy < this.numberOfDivistions; iy++) {\n            // x axis\n            for (let ix = 0; ix < this.numberOfDivistions; ix++) {\n                let x = ix*this.squareDim.width;\n                let y = iy*this.squareDim.height;\n                let square = {\n                    x1: Math.floor(Math.random() * this.svgWidth),\n                    y1: Math.floor(Math.random() * this.svgHeight),\n                    x2: x,\n                    y2: y,\n                }\n                this.data.push(square)\n            }\n        }\n        console.warn(\"DEBUG DEBUG generateDataPoints: this.data = \", this.data)\n    }\n\n    mouseoverAnimation(i, isRipple) {\n        let random = Math.random();\n        let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = d3.select(\"#rect\" +i)\n        rect.transition()\n            .duration(500)\n            .style(\"opacity\", random)\n            .attr(\"fill\", this.colorPallet[randomColorIdx])\n            .attr(\"x\", this.data[i].x1)\n            .attr(\"y\", this.data[i].y1)\n            .transition()\n            .duration(1500)\n            .style(\"opacity\", 1)\n            .attr(\"x\", this.data[i].x2)\n            .attr(\"y\", this.data[i].y2)\n\n        // create ripple effect\n        if(!isRipple) {\n            const radius = 1;\n            let neighbors = [];\n            for(let xIndex = -radius; xIndex <= radius; xIndex++) {\n                let dataIdx = +i+xIndex;\n                for(let yIndex = -radius; yIndex <= radius; yIndex++) {\n                    dataIdx = dataIdx - (yIndex*this.numberOfDivistions)\n                    // if in bounds\n                    if(dataIdx >= 0 && dataIdx<this.data.length && neighbors.indexOf(dataIdx)) {\n                        neighbors.push(dataIdx)\n                    }\n                }\n            }\n            let isRipple = true;\n            for(let neighbor of neighbors) {\n                this.mouseoverAnimation(neighbor, isRipple)\n                // setTimeout(() => {  this.mouseoverAnimation(neighbor, isRipple) }, 10);\n            }\n        }\n    }\n\n    mouseoutAnimation(i, isRipple) {\n        let random = Math.random();\n        let randomColorIdx = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = d3.select(\"#rect\" +i)\n        rect.transition()\n            .duration(1000)\n            .style(\"opacity\", 1)\n            .attr(\"fill\", this.colorPallet[randomColorIdx])\n    }\n\n    drawMosaic(pattern) {\n        pattern = [657, 663, 698, 702,\n                    737, 738, 739, 740, 741, 742, 743,\n                    776, 777, 779, 780, 781, 783, 784,\n                    815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825,\n                    855, 857, 858, 859, 860, 861, 862, 863, 865,\n                    895, 897, 903, 905,\n                    938, 939, 941, 942]\n        for(let squareIdx of pattern) {\n            setTimeout(() => {\n                // let rect = this.data[squareIdx];\n                let svg = d3.select('#animationSVG')\n                let random = Math.random();\n                let rect = d3.select(\"#rect\"+squareIdx).style(\"opacity\", 1)\n                rect.transition()\n                    .delay(1000*random)\n                    .duration(1000)\n                    .style(\"opacity\", 0.2)\n                // svg.append('rect')\n                //     .attr('class', 'mosaic')\n                //     .attr(\"x\", rect.x2)\n                //     .attr(\"y\", rect.y2)\n                //     .attr(\"width\", this.squareDim.width)\n                //     .attr(\"height\", this.squareDim.width)\n                //     .attr('fill', 'black')\n\n            }, 50);\n        }\n        let that = this;\n        that.row = 0;\n        // this.moveMosaicInterval = setInterval(function(){\n        //     that.moveMosaic(pattern, that.row)\n        // }, 100);\n    }\n\n    moveMosaic(pattern, row) {\n        this.row++;\n        if(this.row > this.numberOfDivistions) {\n            // this.moveMosaicInterval.inve\n            return\n        }\n        console.warn(\"moveMosaic! pattern, row =\", pattern)\n        console.warn(\"moveMosaic! row =\",  this.row)\n        let randomColor = Math.floor(Math.random() * this.colorPallet.length);\n\n        d3.selectAll('.mosaic').remove();\n\n        for(let squareIdx of pattern) {\n            let adjustedIdx = squareIdx+40*this.row;\n            setTimeout(() => {\n                let rect = this.data[adjustedIdx]\n                let svg = d3.select('#animationSVG')\n                svg.append('rect')\n                    .attr('class', 'mosaic')\n                    .attr(\"x\", rect.x2)\n                    .attr(\"y\", rect.y2)\n                    .attr(\"width\", this.squareDim.width)\n                    .attr(\"height\", this.squareDim.width)\n                    .attr('fill', 'black')\n\n            }, 50);\n        }\n    }\n\n    passiveAnimation() {\n        let that = this;\n        for(let idx in this.data) {\n            let random = Math.random();\n            let rect = d3.select(\"#rect\"+idx)\n            rect.transition()\n                .delay(1000*random)\n                .duration(1000)\n                .style(\"opacity\", 0.8)\n                .transition()\n                .duration(1000)\n                .style(\"opacity\", 1)\n        }\n    }\n\n    startAnimation() {\n        // set random color pallet\n        let colorPalletKeys = Object.keys(this.colorPallets)\n        let randomColorPallet = Math.floor(Math.random() * colorPalletKeys.length);\n        this.colorPallet = this.colorPallets[colorPalletKeys[randomColorPallet]];\n        console.warn(\"DEBUG colorPalletKeys =\", colorPalletKeys)\n        console.warn(\"DEBUG this.colorPallet =\", this.colorPallet)\n        // setup SVG and begin drawing rectangles\n        let svgDiv = document.getElementById(\"home-animation\");\n        this.svgWidth = 500;\n        this.svgHeight = 500;\n        let that = this;\n        let svg = d3.select(svgDiv).append(\"svg\")\n            .attr(\"id\", \"animationSVG\")\n            .attr(\"width\", this.svgWidth)\n            .attr(\"height\", this.svgHeight)\n            .on(\"click\",function() { that.drawMosaic() })\n\n        this.generateDataPoints();\n        for(let idx in this.data) {\n            setTimeout(() => {  this.drawRectangle(svg, idx) }, 10);\n        }\n        // // start passive animation\n        // let that = this;\n        // setTimeout(() => {  setInterval(that.passiveAnimation, 2500); }, 10*that.data.length);\n    }\n\n    drawRectangle(svg, idx) {\n        let randomColor = Math.floor(Math.random() * this.colorPallet.length);\n        let rect = this.data[idx];\n        let that = this;\n\n        svg.append(\"rect\")\n            .attr(\"id\", \"rect\" + idx)\n            .attr(\"class\", \"animation-rect\")\n            .attr(\"x\", rect.x1)\n            .attr(\"y\", rect.y1)\n            .attr(\"width\", 1)\n            .attr(\"height\", 1)\n            .attr(\"fill\", this.colorPallet[randomColor])\n            .text(idx)\n            .style(\"opacity\", 0)\n            // .on(\"mouseover\", function() { that.mouseoverAnimation(idx) })\n            // .on(\"mouseout\", function() { that.mouseoutAnimation(idx) })\n            .transition()\n            .duration(1500)\n            .attr(\"width\", this.squareDim.width)\n            .attr(\"height\", this.squareDim.height)\n            .style(\"opacity\", 1)\n            .attr(\"y\", rect.y2)\n            .attr(\"x\", rect.x2)\n    }\n\n    render() {\n        return (\n            <div id=\"home-animation\"></div>\n        );\n    }\n}\n\n\nfunction Home(props) {\n  return (\n  \t<div className=\"container-fluid\">\n        <LoadAnimation/>\n\t    <div className=\"col-6 home-section\">\n\t      <h1>William Vennard</h1>\n\t      <h2>Web Developer & Mechanical Engineer</h2>\n\t    </div>\n\t    <div className=\"contact-btn\">\n\t    \t<button className=\"btn btn-outline-light\">Contact Me</button>\n\t    </div>\n    </div>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}